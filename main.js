(()=>{"use strict";var e={79:(e,t,n)=>{n.d(t,{Z:()=>A});var o=n(537),r=n.n(o),d=n(645),i=n.n(d)()(r());i.push([e.id,'.main{\n    display: grid;\n    grid-template-columns: 200px 1fr;\n\n}\n.sidebar{\n    background-color:lightgray;\n    height: 100vh;\n}\n.sidebar div{\n    padding: 10px;\n}\ni{\n    margin-right: 5px;\n}\n.sidebar div:hover{\n    background-color: gray;\n    cursor: pointer;\n    color: white;\n}\n.content{\n    height: 100vh;\n}\n.folder-icon {\n    color: red;\n}\n.add-button {\n    background-color: #4CAF50; /* Green background */\n    border: none; /* Remove border */\n    color: white; /* White text */\n    padding: 15px 32px; /* Some padding */\n    text-align: center; /* Centered text */\n    text-decoration: none; /* Remove underline */\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer; /* Mouse pointer on hover */\n    border-radius: 12px; /* Rounded corners */\n    transition-duration: 0.4s; /* Transition effect */\n}\n\n.add-button:hover {\n    background-color: #45a049; /* Green background on hover */\n}\n\n\n.today-icon {\n    color: blue;\n}\n\n.upcoming-icon {\n    color: green;\n}\n\n.anytime-icon {\n    color: yellow;\n}\n\n.someday-icon {\n    color: purple;\n}\n\n.logbook-icon {\n    color: orange;\n}\n\n.trash-icon {\n    color: black;\n}\ndialog {\n    border: none; /* Remove default border */\n    border-radius: 10px; /* Rounded corners */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\n    width: 80%; /* Dialog width */\n    max-width: 500px; /* Maximum width */\n    padding: 20px; /* Padding around content */\n    margin: 0 auto; /* Center dialog */\n    position: fixed; /* Fixed position */\n    left: 50%; /* Center horizontally */\n    top: 50%; /* Center vertically */\n    transform: translate(-50%, -50%); /* Correct position */\n    background: #fff; /* White background */\n}\n\ndialog form {\n    display: flex;\n    flex-direction: column; /* Stack form fields vertically */\n}\n\ndialog label {\n    font-weight: bold; /* Bold label text */\n    margin-bottom: 5px; /* Space below label */\n    margin-right: 10px;\n}\n\ndialog input[type="text"] {\n    padding: 10px; /* Padding inside text field */\n    margin-bottom: 20px; /* Space below text field */\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n}\n\ndialog input[type="submit"] {\n    background: #4CAF50; /* Green background */\n    color: #fff; /* White text */\n    border: none; /* Remove border */\n    padding: 10px 20px; /* Padding around text */\n    border-radius: 5px; /* Slightly rounded corners */\n    cursor: pointer; /* Hand cursor on hover */\n}\n\ndialog input[type="submit"]:hover {\n    background: #45a049; /* Darker green on hover */\n}\n#cancel{\n        background: #f44336; /* Red background */\n        color: #fff; /* White text */\n}\n#cancel:hover{\n        background: #d32f2f; /* Darker red on hover */\n}\n.button-container{\n    display: flex;\n    gap: 20px;\n}\n.projects>div>div>ul>li{\n    border: 1px solid black;\n    border-radius: 5px;\n}\n.projects>div>div>ul>li {\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n    padding: 10px; /* Padding inside list item */\n    margin-bottom: 10px; /* Space below list item */\n    position: relative; /* Allow absolute positioning of child elements */\n    overflow: hidden; /* Hide overflow content */\n    max-height: 50px; /* Initial max-height for collapsed state */\n    transition: max-height 0.2s ease-out; /* Transition effect for expanding and collapsing */\n}\n\n.projects>div>div>ul>li.expanded {\n    max-height: 500px; /* Max-height for expanded state */\n}\n\n.projects>div>div>ul>li::before {\n    content: \'▶\'; /* Arrow icon for collapsed state */\n    position: absolute; /* Absolute positioning */\n    left:-1px; /* Position to the left of the list item */\n    \n}\n.projects>div>div>ul>li:hover::before {\n    color: #4CAF50; /* Green arrow on hover */\n}\n\n.projects>div>div>ul>li.expanded::before {\n    content: \'▼\'; /* Arrow icon for expanded state */\n}\n.projects>div>div{\n    border: 1px solid lightgray;\n    background-color: whitesmoke;\n    border-radius: 5px;\n    padding: 10px;\n    margin-bottom: 5px;\n}\n#todo-dialog {\n    border: none; /* Remove default border */\n    border-radius: 10px; /* Rounded corners */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\n    width: 80%; /* Dialog width */\n    max-width: 500px; /* Maximum width */\n    padding: 20px; /* Padding around content */\n    margin: 0 auto; /* Center dialog */\n    position: fixed; /* Fixed position */\n    left: 50%; /* Center horizontally */\n    top: 50%; /* Center vertically */\n    transform: translate(-50%, -50%); /* Correct position */\n    background: #fff; /* White background */\n}\n\n#todo-dialog div {\n    margin-bottom: 20px; /* Space below each div */\n}\n\n#todo-dialog label {\n    display: block; /* Display label on its own line */\n    font-weight: bold; /* Bold label text */\n    margin-bottom: 5px; /* Space below label */\n}\n\n#todo-dialog input[type="text"],\n#todo-dialog input[type="date"],\n#todo-dialog textarea,\n#todo-dialog select {\n    width: 100%; /* Full width */\n    padding: 10px; /* Padding inside field */\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n}\n.todo-details button{\n    margin-right: 5px;\n}\n#edit-todo-dialog {\n    border: none; /* Remove default border */\n    border-radius: 10px; /* Rounded corners */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\n    width: 80%; /* Dialog width */\n    max-width: 500px; /* Maximum width */\n    padding: 20px; /* Padding around content */\n    margin: 0 auto; /* Center dialog */\n    position: fixed; /* Fixed position */\n    left: 50%; /* Center horizontally */\n    top: 50%; /* Center vertically */\n    transform: translate(-50%, -50%); /* Correct position */\n    background: #fff; /* White background */\n}\n\n#edit-todo-dialog h1 {\n    text-align: center; /* Center title */\n    margin-bottom: 20px; /* Space below title */\n}\n\n#edit-todo-dialog div {\n    margin-bottom: 20px; /* Space below each div */\n}\n\n#edit-todo-dialog label {\n    display: block; /* Display label on its own line */\n    font-weight: bold; /* Bold label text */\n    margin-bottom: 5px; /* Space below label */\n}\n\n#edit-todo-dialog input[type="text"],\n#edit-todo-dialog input[type="date"],\n#edit-todo-dialog textarea {\n    width: 100%; /* Full width */\n    padding: 10px; /* Padding inside field */\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n}\n.active{\n    background-color: gray;\n    color: white;\n}\n.projectpanelselected>ul>li{\n    padding: 5px;\n    border: 1px solid lightgray;\n    border-radius: 5px;\n    margin-bottom: 5px;\n    list-style: none;\n    padding-left: 20px;\n    cursor: pointer;\n}\n.projectpanelselected>ul>li::before{\n    content: \'▶\'; /* Arrow icon for collapsed state */\n    position: relative; /* Absolute positioning */\n    left:0px;\n}\n.projectpanelselected>ul>li.expanded::before {\n    content: \'▼\';\n}\n.projectpanelselected>ul>li:hover::before {\n    color: #4CAF50; /* Green arrow on hover */\n}\n\n',"",{version:3,sources:["webpack://./src/todo.css"],names:[],mappings:"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",sourcesContent:['.main{\r\n    display: grid;\r\n    grid-template-columns: 200px 1fr;\r\n\r\n}\r\n.sidebar{\r\n    background-color:lightgray;\r\n    height: 100vh;\r\n}\r\n.sidebar div{\r\n    padding: 10px;\r\n}\r\ni{\r\n    margin-right: 5px;\r\n}\r\n.sidebar div:hover{\r\n    background-color: gray;\r\n    cursor: pointer;\r\n    color: white;\r\n}\r\n.content{\r\n    height: 100vh;\r\n}\r\n.folder-icon {\r\n    color: red;\r\n}\r\n.add-button {\r\n    background-color: #4CAF50; /* Green background */\r\n    border: none; /* Remove border */\r\n    color: white; /* White text */\r\n    padding: 15px 32px; /* Some padding */\r\n    text-align: center; /* Centered text */\r\n    text-decoration: none; /* Remove underline */\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer; /* Mouse pointer on hover */\r\n    border-radius: 12px; /* Rounded corners */\r\n    transition-duration: 0.4s; /* Transition effect */\r\n}\r\n\r\n.add-button:hover {\r\n    background-color: #45a049; /* Green background on hover */\r\n}\r\n\r\n\r\n.today-icon {\r\n    color: blue;\r\n}\r\n\r\n.upcoming-icon {\r\n    color: green;\r\n}\r\n\r\n.anytime-icon {\r\n    color: yellow;\r\n}\r\n\r\n.someday-icon {\r\n    color: purple;\r\n}\r\n\r\n.logbook-icon {\r\n    color: orange;\r\n}\r\n\r\n.trash-icon {\r\n    color: black;\r\n}\r\ndialog {\r\n    border: none; /* Remove default border */\r\n    border-radius: 10px; /* Rounded corners */\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\r\n    width: 80%; /* Dialog width */\r\n    max-width: 500px; /* Maximum width */\r\n    padding: 20px; /* Padding around content */\r\n    margin: 0 auto; /* Center dialog */\r\n    position: fixed; /* Fixed position */\r\n    left: 50%; /* Center horizontally */\r\n    top: 50%; /* Center vertically */\r\n    transform: translate(-50%, -50%); /* Correct position */\r\n    background: #fff; /* White background */\r\n}\r\n\r\ndialog form {\r\n    display: flex;\r\n    flex-direction: column; /* Stack form fields vertically */\r\n}\r\n\r\ndialog label {\r\n    font-weight: bold; /* Bold label text */\r\n    margin-bottom: 5px; /* Space below label */\r\n    margin-right: 10px;\r\n}\r\n\r\ndialog input[type="text"] {\r\n    padding: 10px; /* Padding inside text field */\r\n    margin-bottom: 20px; /* Space below text field */\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n}\r\n\r\ndialog input[type="submit"] {\r\n    background: #4CAF50; /* Green background */\r\n    color: #fff; /* White text */\r\n    border: none; /* Remove border */\r\n    padding: 10px 20px; /* Padding around text */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n    cursor: pointer; /* Hand cursor on hover */\r\n}\r\n\r\ndialog input[type="submit"]:hover {\r\n    background: #45a049; /* Darker green on hover */\r\n}\r\n#cancel{\r\n        background: #f44336; /* Red background */\r\n        color: #fff; /* White text */\r\n}\r\n#cancel:hover{\r\n        background: #d32f2f; /* Darker red on hover */\r\n}\r\n.button-container{\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n.projects>div>div>ul>li{\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n}\r\n.projects>div>div>ul>li {\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n    padding: 10px; /* Padding inside list item */\r\n    margin-bottom: 10px; /* Space below list item */\r\n    position: relative; /* Allow absolute positioning of child elements */\r\n    overflow: hidden; /* Hide overflow content */\r\n    max-height: 50px; /* Initial max-height for collapsed state */\r\n    transition: max-height 0.2s ease-out; /* Transition effect for expanding and collapsing */\r\n}\r\n\r\n.projects>div>div>ul>li.expanded {\r\n    max-height: 500px; /* Max-height for expanded state */\r\n}\r\n\r\n.projects>div>div>ul>li::before {\r\n    content: \'▶\'; /* Arrow icon for collapsed state */\r\n    position: absolute; /* Absolute positioning */\r\n    left:-1px; /* Position to the left of the list item */\r\n    \r\n}\r\n.projects>div>div>ul>li:hover::before {\r\n    color: #4CAF50; /* Green arrow on hover */\r\n}\r\n\r\n.projects>div>div>ul>li.expanded::before {\r\n    content: \'▼\'; /* Arrow icon for expanded state */\r\n}\r\n.projects>div>div{\r\n    border: 1px solid lightgray;\r\n    background-color: whitesmoke;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin-bottom: 5px;\r\n}\r\n#todo-dialog {\r\n    border: none; /* Remove default border */\r\n    border-radius: 10px; /* Rounded corners */\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\r\n    width: 80%; /* Dialog width */\r\n    max-width: 500px; /* Maximum width */\r\n    padding: 20px; /* Padding around content */\r\n    margin: 0 auto; /* Center dialog */\r\n    position: fixed; /* Fixed position */\r\n    left: 50%; /* Center horizontally */\r\n    top: 50%; /* Center vertically */\r\n    transform: translate(-50%, -50%); /* Correct position */\r\n    background: #fff; /* White background */\r\n}\r\n\r\n#todo-dialog div {\r\n    margin-bottom: 20px; /* Space below each div */\r\n}\r\n\r\n#todo-dialog label {\r\n    display: block; /* Display label on its own line */\r\n    font-weight: bold; /* Bold label text */\r\n    margin-bottom: 5px; /* Space below label */\r\n}\r\n\r\n#todo-dialog input[type="text"],\r\n#todo-dialog input[type="date"],\r\n#todo-dialog textarea,\r\n#todo-dialog select {\r\n    width: 100%; /* Full width */\r\n    padding: 10px; /* Padding inside field */\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n}\r\n.todo-details button{\r\n    margin-right: 5px;\r\n}\r\n#edit-todo-dialog {\r\n    border: none; /* Remove default border */\r\n    border-radius: 10px; /* Rounded corners */\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\r\n    width: 80%; /* Dialog width */\r\n    max-width: 500px; /* Maximum width */\r\n    padding: 20px; /* Padding around content */\r\n    margin: 0 auto; /* Center dialog */\r\n    position: fixed; /* Fixed position */\r\n    left: 50%; /* Center horizontally */\r\n    top: 50%; /* Center vertically */\r\n    transform: translate(-50%, -50%); /* Correct position */\r\n    background: #fff; /* White background */\r\n}\r\n\r\n#edit-todo-dialog h1 {\r\n    text-align: center; /* Center title */\r\n    margin-bottom: 20px; /* Space below title */\r\n}\r\n\r\n#edit-todo-dialog div {\r\n    margin-bottom: 20px; /* Space below each div */\r\n}\r\n\r\n#edit-todo-dialog label {\r\n    display: block; /* Display label on its own line */\r\n    font-weight: bold; /* Bold label text */\r\n    margin-bottom: 5px; /* Space below label */\r\n}\r\n\r\n#edit-todo-dialog input[type="text"],\r\n#edit-todo-dialog input[type="date"],\r\n#edit-todo-dialog textarea {\r\n    width: 100%; /* Full width */\r\n    padding: 10px; /* Padding inside field */\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n}\r\n.active{\r\n    background-color: gray;\r\n    color: white;\r\n}\r\n.projectpanelselected>ul>li{\r\n    padding: 5px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 5px;\r\n    margin-bottom: 5px;\r\n    list-style: none;\r\n    padding-left: 20px;\r\n    cursor: pointer;\r\n}\r\n.projectpanelselected>ul>li::before{\r\n    content: \'▶\'; /* Arrow icon for collapsed state */\r\n    position: relative; /* Absolute positioning */\r\n    left:0px;\r\n}\r\n.projectpanelselected>ul>li.expanded::before {\r\n    content: \'▼\';\r\n}\r\n.projectpanelselected>ul>li:hover::before {\r\n    color: #4CAF50; /* Green arrow on hover */\r\n}\r\n\r\n'],sourceRoot:""}]);const A=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,d){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var a=this[A][0];null!=a&&(i[a]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&i[c[0]]||(void 0!==d&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=d),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */");return[t].concat([d]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var d={},i=[],A=0;A<e.length;A++){var a=e[A],l=o.base?a[0]+o.base:a[0],c=d[l]||0,s="".concat(l," ").concat(c);d[l]=c+1;var p=n(s),u={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=A,t.splice(A,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var d=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<d.length;i++){var A=n(d[i]);t[A].references--}for(var a=o(e,r),l=0;l<d.length;l++){var c=n(d[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}d=a}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var d=n.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var d=t[o]={id:o,exports:{}};return e[o](d,d.exports,n),d.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{function e(e,t,n,o,r,d){return{title:e,description:t,dueDate:n,priority:o,notes:r,checklist:d,complete:!1,addItemToChecklist:function(e){this.checklist.push(e)},removeItemFromChecklist:function(e){const t=this.checklist.indexOf(e);-1!==t&&this.checklist.splice(t,1)}}}n.d(o,{WJ:()=>z,bb:()=>X,_$:()=>$,te:()=>Z,Ir:()=>H,q:()=>R,FK:()=>Q,Br:()=>K,Wg:()=>V});const t=e("Code repo in GitHub","Complete the final tasks for the project","2022-12-31","low","Remember to test the code thoroughly",["Task 1","Task 2","Task 3"]),r=e("Science fair","Complete the hydrogen project","2023-12-31","high","Remember to test the fusion reaction thoroughly",["hydrogen collection","burning","fusion"]);function d(e,t){return{name:e,todoItems:t,addTodo:function(e){this.todoItems.push(e)},removeTodo:function(e){const t=this.todoItems.indexOf(e);-1!==t&&this.todoItems.splice(t,1)}}}const i=d("Project Summer",[]),A=i;i.addTodo(t),i.addTodo(r),t.addItemToChecklist("Task 4"),t.removeItemFromChecklist("Task 2");var a=n(379),l=n.n(a),c=n(795),s=n.n(c),p=n(569),u=n.n(p),m=n(565),C=n.n(m),g=n(216),h=n.n(g),B=n(589),b=n.n(B),f=n(79),E={};function x(t,n,o,r,d,i){return e(t,n,o,r,d,i)}E.styleTagTransform=b(),E.setAttributes=C(),E.insert=u().bind(null,"head"),E.domAPI=s(),E.insertStyleElement=h(),l()(f.Z,E),f.Z&&f.Z.locals&&f.Z.locals;const y=function(e,t){return d(e,t)},I=document.querySelector(".add-button"),v=document.querySelector(".Project-dialog");I.addEventListener("click",(()=>{v.showModal()}));const k=document.querySelector("#projectname"),S=document.querySelector("#confirm"),w=document.querySelector("#todo-dialog #confirm");S.addEventListener("click",(()=>{const e=y(k.value,[]);R.push(e);const t=document.querySelector(".projects");t.innerHTML="",localStorage.setItem("projects",JSON.stringify(R)),t.appendChild(Q(Z()))})),w.addEventListener("click",(()=>{const e=document.querySelector("#todo-title"),t=document.querySelector("#todo-description"),n=document.querySelector("#todo-due-date"),o=document.querySelector("#todo-priority"),r=document.querySelector("#todo-notes"),d=document.querySelector("#todo-tasks"),i=H,A=x(e.value,t.value,n.value,o.value,r.value,[d.value]);R[i].todoItems.push(A),localStorage.setItem("projects",JSON.stringify(R));const a=document.querySelector(".projects");a.innerHTML="",a.appendChild(Q(Z()))}));const j=document.querySelector(".content");function D(){const e=JSON.parse(localStorage.getItem("projects")),t=(new Date).toISOString().slice(0,10),n=[];e.forEach(((e,o)=>{e.todoItems.forEach(((e,r)=>{e.dueDate===t&&(e.projectIndex=o,e.todoIndex=r,n.push(e))}))})),0===n.length?j.textContent="No tasks for today":j.appendChild(q(n))}function q(e){const t=document.createElement("div"),n=document.createElement("div");n.classList.add("projectpanelselected");const o=document.createElement("ul");return e.forEach(((e,t)=>{const n=document.createElement("li"),r=document.createElement("span"),d=document.createElement("span"),i=document.createElement("div");r.textContent=e.title,d.textContent=` - Due Date: ${e.dueDate}`,i.style.backgroundColor=$(e.priority),i.style.width="10px",i.style.height="10px",i.style.borderRadius="50%",i.style.display="inline-block",n.setAttribute("data-project-todo",`${e.projectIndex}-${e.todoIndex}`),n.addEventListener("click",(()=>{if(n.classList.toggle("expanded"),n.classList.contains("expanded")){const t=function(e){const t=document.createElement("div");t.classList.add("todo-details");const n=document.createElement("h2");n.textContent=e.title;const o=document.createElement("p");o.textContent=e.description;const r=document.createElement("p");r.textContent=`Due Date: ${e.dueDate}`;const d=document.createElement("p");d.textContent=`Priority: ${e.priority}`;const i=document.createElement("h3");i.textContent="Tasks";const A=document.createElement("ul");e.checklist.forEach((e=>{const t=document.createElement("li");t.textContent=e,A.appendChild(t)}));const a=document.createElement("h3");a.textContent="Notes";const l=document.createElement("p");l.textContent=e.notes;const c=document.createElement("button");c.textContent="Edit",c.addEventListener("click",(t=>{z.showModal();const n=t.target.closest("li").getAttribute("data-project-todo").split("-").map(Number);K(n[0]),V(n[1]);const o=e.title,r=e.description,d=e.dueDate,i=e.priority,A=e.checklist,a=e.notes,l=A.join(",\n");document.querySelector("#edit-todo-title").value=o,document.querySelector("#edit-todo-description").value=r,document.querySelector("#edit-todo-due-date").value=d,document.querySelector("#edit-todo-priority").value=i,document.querySelector("#edit-todo-tasks").value=l,document.querySelector("#edit-todo-notes").value=a}));const s=document.createElement("button");return s.textContent="Delete",s.addEventListener("click",(()=>{const e=event.target.closest("li").getAttribute("data-project-todo").split("-").map(Number),t=e[0],n=e[1],o=JSON.parse(localStorage.getItem("projects"));o[t].todoItems.splice(n,1),j.innerHTML="",localStorage.setItem("projects",JSON.stringify(o)),D()})),t.appendChild(n),t.appendChild(o),t.appendChild(r),t.appendChild(d),t.appendChild(i),t.appendChild(A),t.appendChild(a),t.appendChild(l),t.appendChild(c),t.appendChild(s),t}(e);n.appendChild(t)}else{const e=n.querySelector(".todo-details");e&&e.remove()}})),n.appendChild(i),n.appendChild(r),n.appendChild(d),o.appendChild(n)})),n.appendChild(o),t.appendChild(n),t}function L(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function M(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function Y(e){M(1,arguments);var t=function(e){M(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===T(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(e);return t.setHours(0,0,0,0),t}function N(){const e=JSON.parse(localStorage.getItem("projects")),t=new Date,n=(t.toISOString().slice(0,10),[]);e.forEach(((e,o)=>{e.todoItems.forEach(((e,r)=>{const d=function(e,t){M(2,arguments);var n=Y(e),o=Y(t),r=n.getTime()-L(n),d=o.getTime()-L(o);return Math.round((r-d)/864e5)}(new Date(e.dueDate),t);d<=7&&d>=0&&(e.projectIndex=o,e.todoIndex=r,n.push(e))}))})),console.log(n),0===n.length?j.textContent="No tasks for today":j.appendChild(q(n))}const P=document.querySelector(".content");let R=[];R.push(A),R.push(y("My Project",[x("Military gadget upgrade","Modify the military gadget to be more powerful","2022-12-30","medium","The gadget is used to detect the enemy's position and attack them",["test ballistics","missile precision upgrade","Test the gadget in the field"])]));let F=JSON.stringify(R);localStorage.getItem("projects")?R=Z():localStorage.setItem("projects",F);const O=document.querySelector(".projects"),W=document.querySelector("#todo-dialog"),z=document.querySelector("#edit-todo-dialog");let H,J,G,U;function Q(e){const t=document.createElement("div");return e.forEach(((e,n)=>{const o=document.createElement("div"),r=document.createElement("h1"),d=document.createElement("ul");r.textContent=e.name,e.todoItems.forEach(((e,t)=>{const o=document.createElement("li"),r=document.createElement("span"),i=document.createElement("span"),A=document.createElement("div");r.textContent=e.title,i.textContent=` - Due Date: ${e.dueDate}`,A.style.backgroundColor=$(e.priority),A.style.width="10px",A.style.height="10px",A.style.borderRadius="50%",A.style.display="inline-block",o.setAttribute("data-project-todo",`${n}-${t}`),o.addEventListener("click",(()=>{if(o.classList.toggle("expanded"),o.classList.contains("expanded")){const e=o.getAttribute("data-project-todo").split("-").map(Number),t=_(Z()[e[0]].todoItems[e[1]]);o.appendChild(t)}else{const e=o.querySelector(".todo-details");e&&e.remove()}})),o.appendChild(A),o.appendChild(r),o.appendChild(i),d.appendChild(o)})),o.appendChild(r),o.appendChild(d);const i=document.createElement("button");i.textContent="Add To-Do",i.setAttribute("data-project-index",n),i.addEventListener("click",(()=>{W.showModal(),H=i.getAttribute("data-project-index")})),o.appendChild(i),t.appendChild(o)})),t}function $(e){switch(e){case"high":return"red";case"medium":return"yellow";case"low":return"green";default:return"gray"}}function Z(){return JSON.parse(localStorage.getItem("projects"))}function _(e){const t=document.createElement("div");t.classList.add("todo-details");const n=document.createElement("h2");n.textContent=e.title;const o=document.createElement("p");o.textContent=e.description;const r=document.createElement("p");r.textContent=`Due Date: ${e.dueDate}`;const d=document.createElement("p");d.textContent=`Priority: ${e.priority}`;const i=document.createElement("h3");i.textContent="Tasks";const A=document.createElement("ul");e.checklist.forEach((e=>{const t=document.createElement("li");t.textContent=e,A.appendChild(t)}));const a=document.createElement("h3");a.textContent="Notes";const l=document.createElement("p");l.textContent=e.notes;const c=document.createElement("button");c.textContent="Edit",c.addEventListener("click",(t=>{z.showModal();const n=t.target.closest("li").getAttribute("data-project-todo").split("-").map(Number);J=n[0],G=n[1];const o=e.title,r=e.description,d=e.dueDate,i=e.priority,A=e.checklist,a=e.notes,l=A.join(",\n");document.querySelector("#edit-todo-title").value=o,document.querySelector("#edit-todo-description").value=r,document.querySelector("#edit-todo-due-date").value=d,document.querySelector("#edit-todo-priority").value=i,document.querySelector("#edit-todo-tasks").value=l,document.querySelector("#edit-todo-notes").value=a}));const s=document.createElement("button");return s.textContent="Delete",s.addEventListener("click",(()=>{const e=event.target.closest("li").getAttribute("data-project-todo").split("-").map(Number),t=e[0],n=e[1];let o=[];if(o.push(R[t].todoItems[n]),localStorage.getItem("deletedItems")){let e=X();e.push(R[t].todoItems[n]),localStorage.setItem("deletedItems",JSON.stringify(e))}else localStorage.setItem("deletedItems",JSON.stringify(o));const r=document.querySelector(".projects");R[t].todoItems.splice(n,1),r.innerHTML="",localStorage.setItem("projects",JSON.stringify(R)),r.appendChild(Q(Z()))})),t.appendChild(n),t.appendChild(o),t.appendChild(r),t.appendChild(d),t.appendChild(i),t.appendChild(A),t.appendChild(a),t.appendChild(l),t.appendChild(c),t.appendChild(s),t}function K(e){J=e}function V(e){G=e}function X(){return JSON.parse(localStorage.getItem("deletedItems"))}O.appendChild(Q(Z())),console.log(A.todoItems[0].priority),document.querySelector("#edit-todo-dialog #confirm").addEventListener("click",(()=>{const e=R[J].todoItems[G],t=document.querySelector("#edit-todo-dialog #edit-todo-title"),n=document.querySelector("#edit-todo-dialog #edit-todo-description"),o=document.querySelector("#edit-todo-dialog #edit-todo-due-date"),r=document.querySelector("#edit-todo-dialog #edit-todo-priority"),d=document.querySelector("#edit-todo-dialog #edit-todo-notes"),i=document.querySelector("#edit-todo-dialog #edit-todo-tasks");e.title=t.value,e.description=n.value,e.dueDate=o.value,e.priority=r.value,e.notes=d.value,e.checklist=i.value.split(","),O.innerHTML="",localStorage.setItem("projects",JSON.stringify(R)),O.appendChild(Q(Z())),"Today"==U?(ee.innerHTML="",D()):"Next 7 Days"==U&&(ee.innerHTML="",N())}));const ee=document.querySelector(".content"),te=document.querySelectorAll(".sidebar>div");te.forEach((e=>{e.addEventListener("click",(()=>{te.forEach((e=>{e.classList.remove("active")})),e.classList.add("active"),ee.innerHTML="",U=e.textContent,"Projects"==U?(function(e){const t=document.createElement("div");t.classList.add("add-project");const n=document.createElement("button");n.classList.add("add-button");const o=document.createElement("i");o.classList.add("fas"),o.classList.add("fa-plus"),n.appendChild(o);const r=document.createElement("span");r.textContent="Add Project",r.classList.add("add-project-text"),t.appendChild(n),t.appendChild(r);const d=document.createElement("div");d.classList.add("projects"),e.appendChild(t),e.appendChild(d)}(ee),document.querySelector(".projects").appendChild(Q(Z())),function(){const e=document.querySelector(".add-button"),t=document.querySelector(".Project-dialog");e.addEventListener("click",(()=>{t.showModal()}))}()):"Today"==U?D():"Next 7 Days"==U?N():"Trash"==U&&P.appendChild(q(X()))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVdwTixTQUFTVyxjQUFjLEtBQ3hDeU0sRUFBUzNHLFVBQVVDLElBQUksT0FDdkIwRyxFQUFTM0csVUFBVUMsSUFBSSxXQUN2QnlHLEVBQWMxTSxZQUFZMk0sR0FDMUIsTUFBTUMsRUFBaUJyTixTQUFTVyxjQUFjLFFBQzlDME0sRUFBZWpILFlBQWMsY0FDN0JpSCxFQUFlNUcsVUFBVUMsSUFBSSxvQkFDN0J3RyxFQUFjek0sWUFBWTBNLEdBQzFCRCxFQUFjek0sWUFBWTRNLEdBQzFCLE1BQU1DLEVBQVl0TixTQUFTVyxjQUFjLE9BQ3pDMk0sRUFBWTdHLFVBQVVDLElBQUksWUFDMUJ1RyxFQUFZeE0sWUFBWXlNLEdBQ3hCRCxFQUFZeE0sWUFBWTZNLEVBQzVCLENENFFZQyxDQUFpQlYsSUFDRTdNLFNBQVNDLGNBQWMsYUFDL0JRLFlBQVkyRSxFQUFlQyxNQWdCbEQsV0FDSSxNQUFNZCxFQUFPdkUsU0FBU0MsY0FBYyxlQUM5QnVFLEVBQU94RSxTQUFTQyxjQUFjLG1CQUNwQ3NFLEVBQU9FLGlCQUFpQixTQUFRLEtBQzVCRCxFQUFPRSxXQUFXLEdBRzFCLENBdEJZOEksSUFFVyxTQUFQdkIsRUFDSnZHLElBRVcsZUFBUHVHLEVBQ0pqQixJQUVXLFNBQVBpQixHRHBTWixFQUFleEwsWUFBWTRGLEVBQVlpRyxLQ3VTbkMsR0FFRixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2FwcC8uL3NyYy90b2RvLmNzcyIsIndlYnBhY2s6Ly90b2RvYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG9hcHAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kb2FwcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG9hcHAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG9hcHAvLi9zcmMvdG9Eby5qcyIsIndlYnBhY2s6Ly90b2RvYXBwLy4vc3JjL3RvZG8uY3NzPzNmODMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL3NyYy9jcmVhdGVUb0RvVGFzay5qcyIsIndlYnBhY2s6Ly90b2RvYXBwLy4vc3JjL2NvbGxlY3REYXRhLmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9zcmMvdG9kYXkuanMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3N0YXJ0T2ZEYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9zcmMvdGhpc3dlZWsuanMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9zcmMvdHJhc2guanMiLCJ3ZWJwYWNrOi8vdG9kb2FwcC8uL3NyYy90b0RvR1VJLmpzIiwid2VicGFjazovL3RvZG9hcHAvLi9zcmMvcHJvamVjdHNSZWNyZWF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAubWFpbntcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwMHB4IDFmcjtcclxuXHJcbn1cclxuLnNpZGViYXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Z3JheTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbn1cclxuLnNpZGViYXIgZGl2e1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG5pe1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuLnNpZGViYXIgZGl2OmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4uY29udGVudHtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbn1cclxuLmZvbGRlci1pY29uIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuLmFkZC1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDsgLyogR3JlZW4gYmFja2dyb3VuZCAqL1xyXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgYm9yZGVyICovXHJcbiAgICBjb2xvcjogd2hpdGU7IC8qIFdoaXRlIHRleHQgKi9cclxuICAgIHBhZGRpbmc6IDE1cHggMzJweDsgLyogU29tZSBwYWRkaW5nICovXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRlcmVkIHRleHQgKi9cclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgLyogUmVtb3ZlIHVuZGVybGluZSAqL1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luOiA0cHggMnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyOyAvKiBNb3VzZSBwb2ludGVyIG9uIGhvdmVyICovXHJcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuNHM7IC8qIFRyYW5zaXRpb24gZWZmZWN0ICovXHJcbn1cclxuXHJcbi5hZGQtYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7IC8qIEdyZWVuIGJhY2tncm91bmQgb24gaG92ZXIgKi9cclxufVxyXG5cclxuXHJcbi50b2RheS1pY29uIHtcclxuICAgIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG4udXBjb21pbmctaWNvbiB7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbi5hbnl0aW1lLWljb24ge1xyXG4gICAgY29sb3I6IHllbGxvdztcclxufVxyXG5cclxuLnNvbWVkYXktaWNvbiB7XHJcbiAgICBjb2xvcjogcHVycGxlO1xyXG59XHJcblxyXG4ubG9nYm9vay1pY29uIHtcclxuICAgIGNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuXHJcbi50cmFzaC1pY29uIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5kaWFsb2cge1xyXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgZGVmYXVsdCBib3JkZXIgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIFJvdW5kZWQgY29ybmVycyAqL1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7IC8qIFNoYWRvdyBlZmZlY3QgKi9cclxuICAgIHdpZHRoOiA4MCU7IC8qIERpYWxvZyB3aWR0aCAqL1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDsgLyogTWF4aW11bSB3aWR0aCAqL1xyXG4gICAgcGFkZGluZzogMjBweDsgLyogUGFkZGluZyBhcm91bmQgY29udGVudCAqL1xyXG4gICAgbWFyZ2luOiAwIGF1dG87IC8qIENlbnRlciBkaWFsb2cgKi9cclxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogRml4ZWQgcG9zaXRpb24gKi9cclxuICAgIGxlZnQ6IDUwJTsgLyogQ2VudGVyIGhvcml6b250YWxseSAqL1xyXG4gICAgdG9wOiA1MCU7IC8qIENlbnRlciB2ZXJ0aWNhbGx5ICovXHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgLyogQ29ycmVjdCBwb3NpdGlvbiAqL1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjsgLyogV2hpdGUgYmFja2dyb3VuZCAqL1xyXG59XHJcblxyXG5kaWFsb2cgZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgLyogU3RhY2sgZm9ybSBmaWVsZHMgdmVydGljYWxseSAqL1xyXG59XHJcblxyXG5kaWFsb2cgbGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IC8qIEJvbGQgbGFiZWwgdGV4dCAqL1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4OyAvKiBTcGFjZSBiZWxvdyBsYWJlbCAqL1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG5kaWFsb2cgaW5wdXRbdHlwZT1cInRleHRcIl0ge1xyXG4gICAgcGFkZGluZzogMTBweDsgLyogUGFkZGluZyBpbnNpZGUgdGV4dCBmaWVsZCAqL1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogU3BhY2UgYmVsb3cgdGV4dCBmaWVsZCAqL1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsgLyogTGlnaHQgYm9yZGVyICovXHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7IC8qIFNsaWdodGx5IHJvdW5kZWQgY29ybmVycyAqL1xyXG59XHJcblxyXG5kaWFsb2cgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNENBRjUwOyAvKiBHcmVlbiBiYWNrZ3JvdW5kICovXHJcbiAgICBjb2xvcjogI2ZmZjsgLyogV2hpdGUgdGV4dCAqL1xyXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgYm9yZGVyICovXHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7IC8qIFBhZGRpbmcgYXJvdW5kIHRleHQgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogU2xpZ2h0bHkgcm91bmRlZCBjb3JuZXJzICovXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7IC8qIEhhbmQgY3Vyc29yIG9uIGhvdmVyICovXHJcbn1cclxuXHJcbmRpYWxvZyBpbnB1dFt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICM0NWEwNDk7IC8qIERhcmtlciBncmVlbiBvbiBob3ZlciAqL1xyXG59XHJcbiNjYW5jZWx7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2Y0NDMzNjsgLyogUmVkIGJhY2tncm91bmQgKi9cclxuICAgICAgICBjb2xvcjogI2ZmZjsgLyogV2hpdGUgdGV4dCAqL1xyXG59XHJcbiNjYW5jZWw6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2QzMmYyZjsgLyogRGFya2VyIHJlZCBvbiBob3ZlciAqL1xyXG59XHJcbi5idXR0b24tY29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogMjBweDtcclxufVxyXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saXtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbi5wcm9qZWN0cz5kaXY+ZGl2PnVsPmxpIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7IC8qIExpZ2h0IGJvcmRlciAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBTbGlnaHRseSByb3VuZGVkIGNvcm5lcnMgKi9cclxuICAgIHBhZGRpbmc6IDEwcHg7IC8qIFBhZGRpbmcgaW5zaWRlIGxpc3QgaXRlbSAqL1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDsgLyogU3BhY2UgYmVsb3cgbGlzdCBpdGVtICovXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IC8qIEFsbG93IGFic29sdXRlIHBvc2l0aW9uaW5nIG9mIGNoaWxkIGVsZW1lbnRzICovXHJcbiAgICBvdmVyZmxvdzogaGlkZGVuOyAvKiBIaWRlIG92ZXJmbG93IGNvbnRlbnQgKi9cclxuICAgIG1heC1oZWlnaHQ6IDUwcHg7IC8qIEluaXRpYWwgbWF4LWhlaWdodCBmb3IgY29sbGFwc2VkIHN0YXRlICovXHJcbiAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMnMgZWFzZS1vdXQ7IC8qIFRyYW5zaXRpb24gZWZmZWN0IGZvciBleHBhbmRpbmcgYW5kIGNvbGxhcHNpbmcgKi9cclxufVxyXG5cclxuLnByb2plY3RzPmRpdj5kaXY+dWw+bGkuZXhwYW5kZWQge1xyXG4gICAgbWF4LWhlaWdodDogNTAwcHg7IC8qIE1heC1oZWlnaHQgZm9yIGV4cGFuZGVkIHN0YXRlICovXHJcbn1cclxuXHJcbi5wcm9qZWN0cz5kaXY+ZGl2PnVsPmxpOjpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KWtic7IC8qIEFycm93IGljb24gZm9yIGNvbGxhcHNlZCBzdGF0ZSAqL1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyAvKiBBYnNvbHV0ZSBwb3NpdGlvbmluZyAqL1xyXG4gICAgbGVmdDotMXB4OyAvKiBQb3NpdGlvbiB0byB0aGUgbGVmdCBvZiB0aGUgbGlzdCBpdGVtICovXHJcbiAgICBcclxufVxyXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saTpob3Zlcjo6YmVmb3JlIHtcclxuICAgIGNvbG9yOiAjNENBRjUwOyAvKiBHcmVlbiBhcnJvdyBvbiBob3ZlciAqL1xyXG59XHJcblxyXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saS5leHBhbmRlZDo6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfilrwnOyAvKiBBcnJvdyBpY29uIGZvciBleHBhbmRlZCBzdGF0ZSAqL1xyXG59XHJcbi5wcm9qZWN0cz5kaXY+ZGl2e1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuI3RvZG8tZGlhbG9nIHtcclxuICAgIGJvcmRlcjogbm9uZTsgLyogUmVtb3ZlIGRlZmF1bHQgYm9yZGVyICovXHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBTaGFkb3cgZWZmZWN0ICovXHJcbiAgICB3aWR0aDogODAlOyAvKiBEaWFsb2cgd2lkdGggKi9cclxuICAgIG1heC13aWR0aDogNTAwcHg7IC8qIE1heGltdW0gd2lkdGggKi9cclxuICAgIHBhZGRpbmc6IDIwcHg7IC8qIFBhZGRpbmcgYXJvdW5kIGNvbnRlbnQgKi9cclxuICAgIG1hcmdpbjogMCBhdXRvOyAvKiBDZW50ZXIgZGlhbG9nICovXHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uICovXHJcbiAgICBsZWZ0OiA1MCU7IC8qIENlbnRlciBob3Jpem9udGFsbHkgKi9cclxuICAgIHRvcDogNTAlOyAvKiBDZW50ZXIgdmVydGljYWxseSAqL1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IC8qIENvcnJlY3QgcG9zaXRpb24gKi9cclxuICAgIGJhY2tncm91bmQ6ICNmZmY7IC8qIFdoaXRlIGJhY2tncm91bmQgKi9cclxufVxyXG5cclxuI3RvZG8tZGlhbG9nIGRpdiB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyAvKiBTcGFjZSBiZWxvdyBlYWNoIGRpdiAqL1xyXG59XHJcblxyXG4jdG9kby1kaWFsb2cgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7IC8qIERpc3BsYXkgbGFiZWwgb24gaXRzIG93biBsaW5lICovXHJcbiAgICBmb250LXdlaWdodDogYm9sZDsgLyogQm9sZCBsYWJlbCB0ZXh0ICovXHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7IC8qIFNwYWNlIGJlbG93IGxhYmVsICovXHJcbn1cclxuXHJcbiN0b2RvLWRpYWxvZyBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuI3RvZG8tZGlhbG9nIGlucHV0W3R5cGU9XCJkYXRlXCJdLFxyXG4jdG9kby1kaWFsb2cgdGV4dGFyZWEsXHJcbiN0b2RvLWRpYWxvZyBzZWxlY3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7IC8qIEZ1bGwgd2lkdGggKi9cclxuICAgIHBhZGRpbmc6IDEwcHg7IC8qIFBhZGRpbmcgaW5zaWRlIGZpZWxkICovXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOyAvKiBMaWdodCBib3JkZXIgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogU2xpZ2h0bHkgcm91bmRlZCBjb3JuZXJzICovXHJcbn1cclxuLnRvZG8tZGV0YWlscyBidXR0b257XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4jZWRpdC10b2RvLWRpYWxvZyB7XHJcbiAgICBib3JkZXI6IG5vbmU7IC8qIFJlbW92ZSBkZWZhdWx0IGJvcmRlciAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogUm91bmRlZCBjb3JuZXJzICovXHJcbiAgICBib3gtc2hhZG93OiAwIDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsgLyogU2hhZG93IGVmZmVjdCAqL1xyXG4gICAgd2lkdGg6IDgwJTsgLyogRGlhbG9nIHdpZHRoICovXHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4OyAvKiBNYXhpbXVtIHdpZHRoICovXHJcbiAgICBwYWRkaW5nOiAyMHB4OyAvKiBQYWRkaW5nIGFyb3VuZCBjb250ZW50ICovXHJcbiAgICBtYXJnaW46IDAgYXV0bzsgLyogQ2VudGVyIGRpYWxvZyAqL1xyXG4gICAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiAqL1xyXG4gICAgbGVmdDogNTAlOyAvKiBDZW50ZXIgaG9yaXpvbnRhbGx5ICovXHJcbiAgICB0b3A6IDUwJTsgLyogQ2VudGVyIHZlcnRpY2FsbHkgKi9cclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyAvKiBDb3JyZWN0IHBvc2l0aW9uICovXHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmOyAvKiBXaGl0ZSBiYWNrZ3JvdW5kICovXHJcbn1cclxuXHJcbiNlZGl0LXRvZG8tZGlhbG9nIGgxIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgLyogQ2VudGVyIHRpdGxlICovXHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyAvKiBTcGFjZSBiZWxvdyB0aXRsZSAqL1xyXG59XHJcblxyXG4jZWRpdC10b2RvLWRpYWxvZyBkaXYge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogU3BhY2UgYmVsb3cgZWFjaCBkaXYgKi9cclxufVxyXG5cclxuI2VkaXQtdG9kby1kaWFsb2cgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7IC8qIERpc3BsYXkgbGFiZWwgb24gaXRzIG93biBsaW5lICovXHJcbiAgICBmb250LXdlaWdodDogYm9sZDsgLyogQm9sZCBsYWJlbCB0ZXh0ICovXHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7IC8qIFNwYWNlIGJlbG93IGxhYmVsICovXHJcbn1cclxuXHJcbiNlZGl0LXRvZG8tZGlhbG9nIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxyXG4jZWRpdC10b2RvLWRpYWxvZyBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcclxuI2VkaXQtdG9kby1kaWFsb2cgdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7IC8qIEZ1bGwgd2lkdGggKi9cclxuICAgIHBhZGRpbmc6IDEwcHg7IC8qIFBhZGRpbmcgaW5zaWRlIGZpZWxkICovXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOyAvKiBMaWdodCBib3JkZXIgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogU2xpZ2h0bHkgcm91bmRlZCBjb3JuZXJzICovXHJcbn1cclxuLmFjdGl2ZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuLnByb2plY3RwYW5lbHNlbGVjdGVkPnVsPmxpe1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4ucHJvamVjdHBhbmVsc2VsZWN0ZWQ+dWw+bGk6OmJlZm9yZXtcclxuICAgIGNvbnRlbnQ6ICfilrYnOyAvKiBBcnJvdyBpY29uIGZvciBjb2xsYXBzZWQgc3RhdGUgKi9cclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgLyogQWJzb2x1dGUgcG9zaXRpb25pbmcgKi9cclxuICAgIGxlZnQ6MHB4O1xyXG59XHJcbi5wcm9qZWN0cGFuZWxzZWxlY3RlZD51bD5saS5leHBhbmRlZDo6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfilrwnO1xyXG59XHJcbi5wcm9qZWN0cGFuZWxzZWxlY3RlZD51bD5saTpob3Zlcjo6YmVmb3JlIHtcclxuICAgIGNvbG9yOiAjNENBRjUwOyAvKiBHcmVlbiBhcnJvdyBvbiBob3ZlciAqL1xyXG59XHJcblxyXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy90b2RvLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixnQ0FBZ0M7O0FBRXBDO0FBQ0E7SUFDSSwwQkFBMEI7SUFDMUIsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxzQkFBc0I7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QkFBaUI7SUFDckMsbUJBQW1CLEVBQUUsc0JBQXNCO0FBQy9DOztBQUVBO0lBQ0ksbUJBQW1CLEVBQUUseUJBQXlCO0FBQ2xEOztBQUVBO0lBQ0ksY0FBYyxFQUFFLGtDQUFrQztJQUNsRCxpQkFBaUIsRUFBRSxvQkFBb0I7SUFDdkMsa0JBQWtCLEVBQUUsc0JBQXNCO0FBQzlDOztBQUVBOzs7SUFHSSxXQUFXLEVBQUUsZUFBZTtJQUM1QixhQUFhLEVBQUUseUJBQXlCO0lBQ3hDLHNCQUFzQixFQUFFLGlCQUFpQjtJQUN6QyxrQkFBa0IsRUFBRSw2QkFBNkI7QUFDckQ7QUFDQTtJQUNJLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osMkJBQTJCO0lBQzNCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSxZQUFZLEVBQUUsbUNBQW1DO0lBQ2pELGtCQUFrQixFQUFFLHlCQUF5QjtJQUM3QyxRQUFRO0FBQ1o7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGNBQWMsRUFBRSx5QkFBeUI7QUFDN0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm1haW57XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjAwcHggMWZyO1xcclxcblxcclxcbn1cXHJcXG4uc2lkZWJhcntcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjpsaWdodGdyYXk7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxufVxcclxcbi5zaWRlYmFyIGRpdntcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG59XFxyXFxuaXtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XFxyXFxufVxcclxcbi5zaWRlYmFyIGRpdjpob3ZlcntcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxufVxcclxcbi5jb250ZW50e1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbn1cXHJcXG4uZm9sZGVyLWljb24ge1xcclxcbiAgICBjb2xvcjogcmVkO1xcclxcbn1cXHJcXG4uYWRkLWJ1dHRvbiB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7IC8qIEdyZWVuIGJhY2tncm91bmQgKi9cXHJcXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgYm9yZGVyICovXFxyXFxuICAgIGNvbG9yOiB3aGl0ZTsgLyogV2hpdGUgdGV4dCAqL1xcclxcbiAgICBwYWRkaW5nOiAxNXB4IDMycHg7IC8qIFNvbWUgcGFkZGluZyAqL1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRlcmVkIHRleHQgKi9cXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAvKiBSZW1vdmUgdW5kZXJsaW5lICovXFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHJcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcclxcbiAgICBtYXJnaW46IDRweCAycHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjsgLyogTW91c2UgcG9pbnRlciBvbiBob3ZlciAqL1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cXHJcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC40czsgLyogVHJhbnNpdGlvbiBlZmZlY3QgKi9cXHJcXG59XFxyXFxuXFxyXFxuLmFkZC1idXR0b246aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5OyAvKiBHcmVlbiBiYWNrZ3JvdW5kIG9uIGhvdmVyICovXFxyXFxufVxcclxcblxcclxcblxcclxcbi50b2RheS1pY29uIHtcXHJcXG4gICAgY29sb3I6IGJsdWU7XFxyXFxufVxcclxcblxcclxcbi51cGNvbWluZy1pY29uIHtcXHJcXG4gICAgY29sb3I6IGdyZWVuO1xcclxcbn1cXHJcXG5cXHJcXG4uYW55dGltZS1pY29uIHtcXHJcXG4gICAgY29sb3I6IHllbGxvdztcXHJcXG59XFxyXFxuXFxyXFxuLnNvbWVkYXktaWNvbiB7XFxyXFxuICAgIGNvbG9yOiBwdXJwbGU7XFxyXFxufVxcclxcblxcclxcbi5sb2dib29rLWljb24ge1xcclxcbiAgICBjb2xvcjogb3JhbmdlO1xcclxcbn1cXHJcXG5cXHJcXG4udHJhc2gtaWNvbiB7XFxyXFxuICAgIGNvbG9yOiBibGFjaztcXHJcXG59XFxyXFxuZGlhbG9nIHtcXHJcXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgZGVmYXVsdCBib3JkZXIgKi9cXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogUm91bmRlZCBjb3JuZXJzICovXFxyXFxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBTaGFkb3cgZWZmZWN0ICovXFxyXFxuICAgIHdpZHRoOiA4MCU7IC8qIERpYWxvZyB3aWR0aCAqL1xcclxcbiAgICBtYXgtd2lkdGg6IDUwMHB4OyAvKiBNYXhpbXVtIHdpZHRoICovXFxyXFxuICAgIHBhZGRpbmc6IDIwcHg7IC8qIFBhZGRpbmcgYXJvdW5kIGNvbnRlbnQgKi9cXHJcXG4gICAgbWFyZ2luOiAwIGF1dG87IC8qIENlbnRlciBkaWFsb2cgKi9cXHJcXG4gICAgcG9zaXRpb246IGZpeGVkOyAvKiBGaXhlZCBwb3NpdGlvbiAqL1xcclxcbiAgICBsZWZ0OiA1MCU7IC8qIENlbnRlciBob3Jpem9udGFsbHkgKi9cXHJcXG4gICAgdG9wOiA1MCU7IC8qIENlbnRlciB2ZXJ0aWNhbGx5ICovXFxyXFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyAvKiBDb3JyZWN0IHBvc2l0aW9uICovXFxyXFxuICAgIGJhY2tncm91bmQ6ICNmZmY7IC8qIFdoaXRlIGJhY2tncm91bmQgKi9cXHJcXG59XFxyXFxuXFxyXFxuZGlhbG9nIGZvcm0ge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiBTdGFjayBmb3JtIGZpZWxkcyB2ZXJ0aWNhbGx5ICovXFxyXFxufVxcclxcblxcclxcbmRpYWxvZyBsYWJlbCB7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAvKiBCb2xkIGxhYmVsIHRleHQgKi9cXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4OyAvKiBTcGFjZSBiZWxvdyBsYWJlbCAqL1xcclxcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbmRpYWxvZyBpbnB1dFt0eXBlPVxcXCJ0ZXh0XFxcIl0ge1xcclxcbiAgICBwYWRkaW5nOiAxMHB4OyAvKiBQYWRkaW5nIGluc2lkZSB0ZXh0IGZpZWxkICovXFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IC8qIFNwYWNlIGJlbG93IHRleHQgZmllbGQgKi9cXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsgLyogTGlnaHQgYm9yZGVyICovXFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogU2xpZ2h0bHkgcm91bmRlZCBjb3JuZXJzICovXFxyXFxufVxcclxcblxcclxcbmRpYWxvZyBpbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXSB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICM0Q0FGNTA7IC8qIEdyZWVuIGJhY2tncm91bmQgKi9cXHJcXG4gICAgY29sb3I6ICNmZmY7IC8qIFdoaXRlIHRleHQgKi9cXHJcXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgYm9yZGVyICovXFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMjBweDsgLyogUGFkZGluZyBhcm91bmQgdGV4dCAqL1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7IC8qIFNsaWdodGx5IHJvdW5kZWQgY29ybmVycyAqL1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7IC8qIEhhbmQgY3Vyc29yIG9uIGhvdmVyICovXFxyXFxufVxcclxcblxcclxcbmRpYWxvZyBpbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXTpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICM0NWEwNDk7IC8qIERhcmtlciBncmVlbiBvbiBob3ZlciAqL1xcclxcbn1cXHJcXG4jY2FuY2Vse1xcclxcbiAgICAgICAgYmFja2dyb3VuZDogI2Y0NDMzNjsgLyogUmVkIGJhY2tncm91bmQgKi9cXHJcXG4gICAgICAgIGNvbG9yOiAjZmZmOyAvKiBXaGl0ZSB0ZXh0ICovXFxyXFxufVxcclxcbiNjYW5jZWw6aG92ZXJ7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kOiAjZDMyZjJmOyAvKiBEYXJrZXIgcmVkIG9uIGhvdmVyICovXFxyXFxufVxcclxcbi5idXR0b24tY29udGFpbmVye1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBnYXA6IDIwcHg7XFxyXFxufVxcclxcbi5wcm9qZWN0cz5kaXY+ZGl2PnVsPmxpe1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbn1cXHJcXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saSB7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7IC8qIExpZ2h0IGJvcmRlciAqL1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7IC8qIFNsaWdodGx5IHJvdW5kZWQgY29ybmVycyAqL1xcclxcbiAgICBwYWRkaW5nOiAxMHB4OyAvKiBQYWRkaW5nIGluc2lkZSBsaXN0IGl0ZW0gKi9cXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDsgLyogU3BhY2UgYmVsb3cgbGlzdCBpdGVtICovXFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgLyogQWxsb3cgYWJzb2x1dGUgcG9zaXRpb25pbmcgb2YgY2hpbGQgZWxlbWVudHMgKi9cXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgLyogSGlkZSBvdmVyZmxvdyBjb250ZW50ICovXFxyXFxuICAgIG1heC1oZWlnaHQ6IDUwcHg7IC8qIEluaXRpYWwgbWF4LWhlaWdodCBmb3IgY29sbGFwc2VkIHN0YXRlICovXFxyXFxuICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4ycyBlYXNlLW91dDsgLyogVHJhbnNpdGlvbiBlZmZlY3QgZm9yIGV4cGFuZGluZyBhbmQgY29sbGFwc2luZyAqL1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saS5leHBhbmRlZCB7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDUwMHB4OyAvKiBNYXgtaGVpZ2h0IGZvciBleHBhbmRlZCBzdGF0ZSAqL1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saTo6YmVmb3JlIHtcXHJcXG4gICAgY29udGVudDogJ+KWtic7IC8qIEFycm93IGljb24gZm9yIGNvbGxhcHNlZCBzdGF0ZSAqL1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7IC8qIEFic29sdXRlIHBvc2l0aW9uaW5nICovXFxyXFxuICAgIGxlZnQ6LTFweDsgLyogUG9zaXRpb24gdG8gdGhlIGxlZnQgb2YgdGhlIGxpc3QgaXRlbSAqL1xcclxcbiAgICBcXHJcXG59XFxyXFxuLnByb2plY3RzPmRpdj5kaXY+dWw+bGk6aG92ZXI6OmJlZm9yZSB7XFxyXFxuICAgIGNvbG9yOiAjNENBRjUwOyAvKiBHcmVlbiBhcnJvdyBvbiBob3ZlciAqL1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdHM+ZGl2PmRpdj51bD5saS5leHBhbmRlZDo6YmVmb3JlIHtcXHJcXG4gICAgY29udGVudDogJ+KWvCc7IC8qIEFycm93IGljb24gZm9yIGV4cGFuZGVkIHN0YXRlICovXFxyXFxufVxcclxcbi5wcm9qZWN0cz5kaXY+ZGl2e1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyYXk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcclxcbn1cXHJcXG4jdG9kby1kaWFsb2cge1xcclxcbiAgICBib3JkZXI6IG5vbmU7IC8qIFJlbW92ZSBkZWZhdWx0IGJvcmRlciAqL1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cXHJcXG4gICAgYm94LXNoYWRvdzogMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7IC8qIFNoYWRvdyBlZmZlY3QgKi9cXHJcXG4gICAgd2lkdGg6IDgwJTsgLyogRGlhbG9nIHdpZHRoICovXFxyXFxuICAgIG1heC13aWR0aDogNTAwcHg7IC8qIE1heGltdW0gd2lkdGggKi9cXHJcXG4gICAgcGFkZGluZzogMjBweDsgLyogUGFkZGluZyBhcm91bmQgY29udGVudCAqL1xcclxcbiAgICBtYXJnaW46IDAgYXV0bzsgLyogQ2VudGVyIGRpYWxvZyAqL1xcclxcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIHBvc2l0aW9uICovXFxyXFxuICAgIGxlZnQ6IDUwJTsgLyogQ2VudGVyIGhvcml6b250YWxseSAqL1xcclxcbiAgICB0b3A6IDUwJTsgLyogQ2VudGVyIHZlcnRpY2FsbHkgKi9cXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IC8qIENvcnJlY3QgcG9zaXRpb24gKi9cXHJcXG4gICAgYmFja2dyb3VuZDogI2ZmZjsgLyogV2hpdGUgYmFja2dyb3VuZCAqL1xcclxcbn1cXHJcXG5cXHJcXG4jdG9kby1kaWFsb2cgZGl2IHtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogU3BhY2UgYmVsb3cgZWFjaCBkaXYgKi9cXHJcXG59XFxyXFxuXFxyXFxuI3RvZG8tZGlhbG9nIGxhYmVsIHtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7IC8qIERpc3BsYXkgbGFiZWwgb24gaXRzIG93biBsaW5lICovXFxyXFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAvKiBCb2xkIGxhYmVsIHRleHQgKi9cXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4OyAvKiBTcGFjZSBiZWxvdyBsYWJlbCAqL1xcclxcbn1cXHJcXG5cXHJcXG4jdG9kby1kaWFsb2cgaW5wdXRbdHlwZT1cXFwidGV4dFxcXCJdLFxcclxcbiN0b2RvLWRpYWxvZyBpbnB1dFt0eXBlPVxcXCJkYXRlXFxcIl0sXFxyXFxuI3RvZG8tZGlhbG9nIHRleHRhcmVhLFxcclxcbiN0b2RvLWRpYWxvZyBzZWxlY3Qge1xcclxcbiAgICB3aWR0aDogMTAwJTsgLyogRnVsbCB3aWR0aCAqL1xcclxcbiAgICBwYWRkaW5nOiAxMHB4OyAvKiBQYWRkaW5nIGluc2lkZSBmaWVsZCAqL1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOyAvKiBMaWdodCBib3JkZXIgKi9cXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBTbGlnaHRseSByb3VuZGVkIGNvcm5lcnMgKi9cXHJcXG59XFxyXFxuLnRvZG8tZGV0YWlscyBidXR0b257XFxyXFxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xcclxcbn1cXHJcXG4jZWRpdC10b2RvLWRpYWxvZyB7XFxyXFxuICAgIGJvcmRlcjogbm9uZTsgLyogUmVtb3ZlIGRlZmF1bHQgYm9yZGVyICovXFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIFJvdW5kZWQgY29ybmVycyAqL1xcclxcbiAgICBib3gtc2hhZG93OiAwIDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsgLyogU2hhZG93IGVmZmVjdCAqL1xcclxcbiAgICB3aWR0aDogODAlOyAvKiBEaWFsb2cgd2lkdGggKi9cXHJcXG4gICAgbWF4LXdpZHRoOiA1MDBweDsgLyogTWF4aW11bSB3aWR0aCAqL1xcclxcbiAgICBwYWRkaW5nOiAyMHB4OyAvKiBQYWRkaW5nIGFyb3VuZCBjb250ZW50ICovXFxyXFxuICAgIG1hcmdpbjogMCBhdXRvOyAvKiBDZW50ZXIgZGlhbG9nICovXFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogRml4ZWQgcG9zaXRpb24gKi9cXHJcXG4gICAgbGVmdDogNTAlOyAvKiBDZW50ZXIgaG9yaXpvbnRhbGx5ICovXFxyXFxuICAgIHRvcDogNTAlOyAvKiBDZW50ZXIgdmVydGljYWxseSAqL1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgLyogQ29ycmVjdCBwb3NpdGlvbiAqL1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjZmZmOyAvKiBXaGl0ZSBiYWNrZ3JvdW5kICovXFxyXFxufVxcclxcblxcclxcbiNlZGl0LXRvZG8tZGlhbG9nIGgxIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50ZXIgdGl0bGUgKi9cXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogU3BhY2UgYmVsb3cgdGl0bGUgKi9cXHJcXG59XFxyXFxuXFxyXFxuI2VkaXQtdG9kby1kaWFsb2cgZGl2IHtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogU3BhY2UgYmVsb3cgZWFjaCBkaXYgKi9cXHJcXG59XFxyXFxuXFxyXFxuI2VkaXQtdG9kby1kaWFsb2cgbGFiZWwge1xcclxcbiAgICBkaXNwbGF5OiBibG9jazsgLyogRGlzcGxheSBsYWJlbCBvbiBpdHMgb3duIGxpbmUgKi9cXHJcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IC8qIEJvbGQgbGFiZWwgdGV4dCAqL1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7IC8qIFNwYWNlIGJlbG93IGxhYmVsICovXFxyXFxufVxcclxcblxcclxcbiNlZGl0LXRvZG8tZGlhbG9nIGlucHV0W3R5cGU9XFxcInRleHRcXFwiXSxcXHJcXG4jZWRpdC10b2RvLWRpYWxvZyBpbnB1dFt0eXBlPVxcXCJkYXRlXFxcIl0sXFxyXFxuI2VkaXQtdG9kby1kaWFsb2cgdGV4dGFyZWEge1xcclxcbiAgICB3aWR0aDogMTAwJTsgLyogRnVsbCB3aWR0aCAqL1xcclxcbiAgICBwYWRkaW5nOiAxMHB4OyAvKiBQYWRkaW5nIGluc2lkZSBmaWVsZCAqL1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOyAvKiBMaWdodCBib3JkZXIgKi9cXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBTbGlnaHRseSByb3VuZGVkIGNvcm5lcnMgKi9cXHJcXG59XFxyXFxuLmFjdGl2ZXtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG4ucHJvamVjdHBhbmVsc2VsZWN0ZWQ+dWw+bGl7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXHJcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcbi5wcm9qZWN0cGFuZWxzZWxlY3RlZD51bD5saTo6YmVmb3Jle1xcclxcbiAgICBjb250ZW50OiAn4pa2JzsgLyogQXJyb3cgaWNvbiBmb3IgY29sbGFwc2VkIHN0YXRlICovXFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgLyogQWJzb2x1dGUgcG9zaXRpb25pbmcgKi9cXHJcXG4gICAgbGVmdDowcHg7XFxyXFxufVxcclxcbi5wcm9qZWN0cGFuZWxzZWxlY3RlZD51bD5saS5leHBhbmRlZDo6YmVmb3JlIHtcXHJcXG4gICAgY29udGVudDogJ+KWvCc7XFxyXFxufVxcclxcbi5wcm9qZWN0cGFuZWxzZWxlY3RlZD51bD5saTpob3Zlcjo6YmVmb3JlIHtcXHJcXG4gICAgY29sb3I6ICM0Q0FGNTA7IC8qIEdyZWVuIGFycm93IG9uIGhvdmVyICovXFxyXFxufVxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCIvLyBGYWN0b3J5IGZ1bmN0aW9uIHRvIGNyZWF0ZSB0b2RvIGl0ZW1zXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUb2RvSXRlbSh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBub3RlcywgY2hlY2tsaXN0KSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHRpdGxlLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uLFxyXG4gICAgICAgIGR1ZURhdGUsXHJcbiAgICAgICAgcHJpb3JpdHksXHJcbiAgICAgICAgbm90ZXMsXHJcbiAgICAgICAgY2hlY2tsaXN0LFxyXG4gICAgICAgIGNvbXBsZXRlOiBmYWxzZSwgLy8gQWRkZWQgY29tcGxldGUgc3RhdHVzIHByb3BlcnR5XHJcbiAgICAgICAgYWRkSXRlbVRvQ2hlY2tsaXN0OiBmdW5jdGlvbihpdGVtKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tsaXN0LnB1c2goaXRlbSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZW1vdmVJdGVtRnJvbUNoZWNrbGlzdDogZnVuY3Rpb24oaXRlbSkge1xyXG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuY2hlY2tsaXN0LmluZGV4T2YoaXRlbSk7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tsaXN0LnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcblxyXG4vLyBDcmVhdGUgYSB0b2RvIGl0ZW0gdXNpbmcgdGhlIGZhY3RvcnkgZnVuY3Rpb25cclxuY29uc3QgdG9kb0l0ZW0gPSBjcmVhdGVUb2RvSXRlbShcclxuICAgIFwiQ29kZSByZXBvIGluIEdpdEh1YlwiLFxyXG4gICAgXCJDb21wbGV0ZSB0aGUgZmluYWwgdGFza3MgZm9yIHRoZSBwcm9qZWN0XCIsXHJcbiAgICBcIjIwMjItMTItMzFcIixcclxuICAgIFwibG93XCIsXHJcbiAgICBcIlJlbWVtYmVyIHRvIHRlc3QgdGhlIGNvZGUgdGhvcm91Z2hseVwiLFxyXG4gICAgW1wiVGFzayAxXCIsIFwiVGFzayAyXCIsIFwiVGFzayAzXCJdXHJcbik7XHJcbmNvbnN0IHRvZG9JdGVtMSA9IGNyZWF0ZVRvZG9JdGVtKFxyXG4gICAgXCJTY2llbmNlIGZhaXJcIixcclxuICAgIFwiQ29tcGxldGUgdGhlIGh5ZHJvZ2VuIHByb2plY3RcIixcclxuICAgIFwiMjAyMy0xMi0zMVwiLFxyXG4gICAgXCJoaWdoXCIsXHJcbiAgICBcIlJlbWVtYmVyIHRvIHRlc3QgdGhlIGZ1c2lvbiByZWFjdGlvbiB0aG9yb3VnaGx5XCIsXHJcbiAgICBbXCJoeWRyb2dlbiBjb2xsZWN0aW9uXCIsIFwiYnVybmluZ1wiLCBcImZ1c2lvblwiXVxyXG4pO1xyXG4vLyBGYWN0b3J5IGZ1bmN0aW9uIHRvIGNyZWF0ZSBwcm9qZWN0IG9iamVjdHNcclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb2plY3QobmFtZSwgdG9kb0l0ZW1zKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG5hbWUsXHJcbiAgICAgICAgdG9kb0l0ZW1zLFxyXG4gICAgICAgIGFkZFRvZG86IGZ1bmN0aW9uKHRvZG8pIHtcclxuICAgICAgICAgICAgdGhpcy50b2RvSXRlbXMucHVzaCh0b2RvKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZVRvZG86IGZ1bmN0aW9uKHRvZG8pIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnRvZG9JdGVtcy5pbmRleE9mKHRvZG8pO1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRvZG9JdGVtcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5cclxuLy8gQ3JlYXRlIGEgcHJvamVjdCBvYmplY3QgdXNpbmcgdGhlIGZhY3RvcnkgZnVuY3Rpb25cclxuY29uc3QgcHJvamVjdCA9IGNyZWF0ZVByb2plY3QoXCJQcm9qZWN0IFN1bW1lclwiLCBbXSk7XHJcbmV4cG9ydCBkZWZhdWx0IHByb2plY3Q7XHJcblxyXG4vLyBBZGQgYSB0b2RvIGl0ZW0gdG8gdGhlIHByb2plY3RcclxucHJvamVjdC5hZGRUb2RvKHRvZG9JdGVtKTtcclxucHJvamVjdC5hZGRUb2RvKHRvZG9JdGVtMSk7XHJcbnRvZG9JdGVtLmFkZEl0ZW1Ub0NoZWNrbGlzdChcIlRhc2sgNFwiKTtcclxudG9kb0l0ZW0ucmVtb3ZlSXRlbUZyb21DaGVja2xpc3QoXCJUYXNrIDJcIik7XHJcblxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9kby5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvZG8uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgY3JlYXRlVG9kb0l0ZW0gLGNyZWF0ZVByb2plY3R9IGZyb20gXCIuL3RvRG9cIjtcclxuZnVuY3Rpb24gY3JlYXRlVG9Ebyh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBub3RlcywgY2hlY2tsaXN0KSB7XHJcbiAgICBjb25zdCB0b2RvSXRlbSA9IGNyZWF0ZVRvZG9JdGVtKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIG5vdGVzLCBjaGVja2xpc3QpO1xyXG4gICAgcmV0dXJuIHRvZG9JdGVtO1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVRvRG9Qcm9qZWN0KG5hbWUsIHRvZG9JdGVtcykge1xyXG4gICAgY29uc3QgcHJvamVjdCA9IGNyZWF0ZVByb2plY3QobmFtZSwgdG9kb0l0ZW1zKTtcclxuICAgIHJldHVybiBwcm9qZWN0O1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRvRG9Qcm9qZWN0O1xyXG5leHBvcnQge2NyZWF0ZVRvRG99OyIsImltcG9ydCBjcmVhdGVUb0RvUHJvamVjdCBmcm9tIFwiLi9jcmVhdGVUb0RvVGFza1wiO1xyXG5pbXBvcnQgeyBwcm9qZWN0cyxyZW5kZXJQcm9qZWN0cyxwcm9qZWN0SW5kZXhlcixnZXRwcm9qZWN0c0Zyb21Mb2NhbFN0b3JhZ2V9IGZyb20gXCIuL3RvRG9HVUlcIjtcclxuaW1wb3J0IHsgY3JlYXRlVG9EbyB9IGZyb20gXCIuL2NyZWF0ZVRvRG9UYXNrXCI7XHJcbmNvbnN0IGFkZGJ0bj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWJ1dHRvbicpO1xyXG5jb25zdCBkaWFsb2c9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLlByb2plY3QtZGlhbG9nJyk7XHJcbmFkZGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcclxuICAgIGRpYWxvZy5zaG93TW9kYWwoKTtcclxufSk7XHJcbmNvbnN0IHByb2plY3RuYW1lPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0bmFtZScpO1xyXG5jb25zdCBjb25maXJtQnRuPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb25maXJtJyk7XHJcbmNvbnN0IHRvRG9Db25maXJtQnRuPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0b2RvLWRpYWxvZyAjY29uZmlybScpO1xyXG5jb25maXJtQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xyXG4gICAgY29uc3QgcHJvamVjdD1jcmVhdGVUb0RvUHJvamVjdChwcm9qZWN0bmFtZS52YWx1ZSxbXSk7XHJcbiAgICBwcm9qZWN0cy5wdXNoKHByb2plY3QpO1xyXG4gICAgY29uc3QgY29udGVudERpdj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMnKTtcclxuICAgIGNvbnRlbnREaXYuaW5uZXJIVE1MPVwiXCI7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvamVjdHMnLEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7XHJcbiAgICBjb250ZW50RGl2LmFwcGVuZENoaWxkKHJlbmRlclByb2plY3RzKGdldHByb2plY3RzRnJvbUxvY2FsU3RvcmFnZSgpKSk7XHJcbn0pO1xyXG50b0RvQ29uZmlybUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcclxuICAgIGNvbnN0IHRpdGxlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0b2RvLXRpdGxlJyk7XHJcbiAgICBjb25zdCBkZXNjcmlwdGlvbj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kby1kZXNjcmlwdGlvbicpO1xyXG4gICAgY29uc3QgZHVlRGF0ZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kby1kdWUtZGF0ZScpO1xyXG4gICAgY29uc3QgcHJpb3JpdHk9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvZG8tcHJpb3JpdHknKTtcclxuICAgIGNvbnN0IG5vdGVzPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0b2RvLW5vdGVzJyk7XHJcbiAgICBjb25zdCB0YXNrcz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kby10YXNrcycpO1xyXG4gICAgY29uc3QgcHJvamVjdEluZGV4PXByb2plY3RJbmRleGVyO1xyXG4gICAgY29uc3QgdG9kbz1jcmVhdGVUb0RvKFxyXG4gICAgICAgIHRpdGxlLnZhbHVlLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uLnZhbHVlLFxyXG4gICAgICAgIGR1ZURhdGUudmFsdWUsXHJcbiAgICAgICAgcHJpb3JpdHkudmFsdWUsXHJcbiAgICAgICAgbm90ZXMudmFsdWUsXHJcbiAgICAgICAgW3Rhc2tzLnZhbHVlXVxyXG4gICAgKTtcclxuICAgIHByb2plY3RzW3Byb2plY3RJbmRleF0udG9kb0l0ZW1zLnB1c2godG9kbyk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvamVjdHMnLEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7XHJcbiAgICBjb25zdCBjb250ZW50RGl2PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cycpO1xyXG4gICAgY29udGVudERpdi5pbm5lckhUTUw9XCJcIjtcclxuICAgIGNvbnRlbnREaXYuYXBwZW5kQ2hpbGQocmVuZGVyUHJvamVjdHMoZ2V0cHJvamVjdHNGcm9tTG9jYWxTdG9yYWdlKCkpKTtcclxufSk7XHJcblxyXG5cclxuZXhwb3J0IHthZGRidG59OyIsImltcG9ydCB7IGdldFByaW9yaXR5Q29sb3IsZWRpdERpYWxvZyxzZXRQcm9qZWN0SW5kZXgsc2V0VG9kb0luZGV4fSBmcm9tIFwiLi90b0RvR1VJXCI7XHJcbmV4cG9ydCBjb25zdCBtYWluQ29udGVudERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUb2RheSgpIHtcclxuICAgIGNvbnN0IHByb2plY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJvamVjdHMnKSk7XHJcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgIGNvbnN0IHRvZGF5ID0gZGF0ZS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDEwKTtcclxuICAgIGNvbnN0IHRvZGF5SXRlbXMgPSBbXTtcclxuXHJcbiAgICBwcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0LHByb2plY3RJbmRleCkgPT4ge1xyXG4gICAgICAgIHByb2plY3QudG9kb0l0ZW1zLmZvckVhY2goKHRvZG8sdG9kb0luZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0b2RvLmR1ZURhdGUgPT09IHRvZGF5KSB7XHJcbiAgICAgICAgICAgICAgICB0b2RvLnByb2plY3RJbmRleCA9IHByb2plY3RJbmRleDtcclxuICAgICAgICAgICAgICAgIHRvZG8udG9kb0luZGV4ID0gdG9kb0luZGV4O1xyXG4gICAgICAgICAgICAgICAgdG9kYXlJdGVtcy5wdXNoKHRvZG8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIGlmKHRvZGF5SXRlbXMubGVuZ3RoPT09MCl7XHJcbiAgICAgICAgbWFpbkNvbnRlbnREaXYudGV4dENvbnRlbnQ9XCJObyB0YXNrcyBmb3IgdG9kYXlcIjtcclxuICAgIH1cclxuICAgIGVsc2V7XHJcbiAgICAgICAgbWFpbkNvbnRlbnREaXYuYXBwZW5kQ2hpbGQocmVuZGVyVG9kYXkodG9kYXlJdGVtcykpO1xyXG5cclxuICAgIH0gXHJcblxyXG4gICAgLy8gVXNlIHRoZSB0b2RheUl0ZW1zIGFycmF5IGFzIG5lZWRlZFxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJUb2RheSh0b2RheVRvZG9zKSB7XHJcbiAgICBjb25zdCBQcm9qZWN0c0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGNvbnN0IHByb2plY3REaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBwcm9qZWN0RGl2LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RwYW5lbHNlbGVjdGVkJyk7XHJcbiAgICAgICAgY29uc3QgdG9kb0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xyXG5cclxuICAgICAgICB0b2RheVRvZG9zLmZvckVhY2goKGl0ZW0sIHRvZG9JbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB0b2RvSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHRvZG9UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgICAgY29uc3QgdG9kb0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5Q2lyY2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IC8vIENyZWF0ZSB0aGUgY2lyY2xlIGVsZW1lbnRcclxuXHJcbiAgICAgICAgICAgIHRvZG9UaXRsZS50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGU7XHJcbiAgICAgICAgICAgIHRvZG9EdWVEYXRlLnRleHRDb250ZW50ID0gYCAtIER1ZSBEYXRlOiAke2l0ZW0uZHVlRGF0ZX1gO1xyXG5cclxuICAgICAgICAgICAgLy8gU2V0IHRoZSBjb2xvciBvZiB0aGUgY2lyY2xlIGJhc2VkIG9uIHByaW9yaXR5XHJcbiAgICAgICAgICAgIHByaW9yaXR5Q2lyY2xlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGdldFByaW9yaXR5Q29sb3IoaXRlbS5wcmlvcml0eSk7XHJcbiAgICAgICAgICAgIHByaW9yaXR5Q2lyY2xlLnN0eWxlLndpZHRoID0gJzEwcHgnO1xyXG4gICAgICAgICAgICBwcmlvcml0eUNpcmNsZS5zdHlsZS5oZWlnaHQgPSAnMTBweCc7XHJcbiAgICAgICAgICAgIHByaW9yaXR5Q2lyY2xlLnN0eWxlLmJvcmRlclJhZGl1cyA9ICc1MCUnO1xyXG4gICAgICAgICAgICBwcmlvcml0eUNpcmNsZS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgdGhlIGRhdGEgYXR0cmlidXRlIHdpdGggcHJvamVjdCBhbmQgdG9kbyBpdGVtIGluZGljZXNcclxuICAgICAgICAgICAgdG9kb0l0ZW0uc2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtdG9kbycsIGAke2l0ZW0ucHJvamVjdEluZGV4fS0ke2l0ZW0udG9kb0luZGV4fWApO1xyXG4gICAgICAgICAgICB0b2RvSXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC50b2dnbGUoJ2V4cGFuZGVkJyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpZiAodG9kb0l0ZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdleHBhbmRlZCcpKSB7O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZG9EZXRhaWxzRGl2ID0gY3JlYXRlVG9Eb0RldGFpbHNEaXYoaXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9kb0l0ZW0uYXBwZW5kQ2hpbGQodG9kb0RldGFpbHNEaXYpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2RvRGV0YWlsc0RpdiA9IHRvZG9JdGVtLnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWRldGFpbHMnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodG9kb0RldGFpbHNEaXYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9kb0RldGFpbHNEaXYucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHRvZG9JdGVtLmFwcGVuZENoaWxkKHByaW9yaXR5Q2lyY2xlKTsgLy8gQWRkIHRoZSBjaXJjbGUgZWxlbWVudCB0byB0aGUgdG9kbyBpdGVtXHJcbiAgICAgICAgICAgIHRvZG9JdGVtLmFwcGVuZENoaWxkKHRvZG9UaXRsZSk7XHJcbiAgICAgICAgICAgIHRvZG9JdGVtLmFwcGVuZENoaWxkKHRvZG9EdWVEYXRlKTtcclxuICAgICAgICAgICAgdG9kb0xpc3QuYXBwZW5kQ2hpbGQodG9kb0l0ZW0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHByb2plY3REaXYuYXBwZW5kQ2hpbGQodG9kb0xpc3QpO1xyXG4gICAgICAgIFByb2plY3RzRGl2LmFwcGVuZENoaWxkKHByb2plY3REaXYpO1xyXG5cclxuICAgIHJldHVybiBQcm9qZWN0c0RpdjtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVUb0RvRGV0YWlsc0RpdihpdGVtKSB7XHJcbiAgICBjb25zdCBkZXRhaWxzRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkZXRhaWxzRGl2LmNsYXNzTGlzdC5hZGQoJ3RvZG8tZGV0YWlscycpO1xyXG5cclxuICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XHJcbiAgICB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSBpdGVtLnRpdGxlO1xyXG5cclxuICAgIGNvbnN0IGRlc2NyaXB0aW9uRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIGRlc2NyaXB0aW9uRWxlbWVudC50ZXh0Q29udGVudCA9IGl0ZW0uZGVzY3JpcHRpb247XHJcblxyXG4gICAgY29uc3QgZHVlRGF0ZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBkdWVEYXRlRWxlbWVudC50ZXh0Q29udGVudCA9IGBEdWUgRGF0ZTogJHtpdGVtLmR1ZURhdGV9YDtcclxuXHJcbiAgICBjb25zdCBwcmlvcml0eUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBwcmlvcml0eUVsZW1lbnQudGV4dENvbnRlbnQgPSBgUHJpb3JpdHk6ICR7aXRlbS5wcmlvcml0eX1gO1xyXG5cclxuICAgIGNvbnN0IHRhc2tzSGVhZGluZ0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gICAgdGFza3NIZWFkaW5nRWxlbWVudC50ZXh0Q29udGVudCA9ICdUYXNrcyc7XHJcblxyXG4gICAgY29uc3QgdGFza3NFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcclxuICAgIGl0ZW0uY2hlY2tsaXN0LmZvckVhY2godGFzayA9PiB7XHJcbiAgICAgICAgY29uc3QgdGFza0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgICAgIHRhc2tFbGVtZW50LnRleHRDb250ZW50ID0gdGFzaztcclxuICAgICAgICB0YXNrc0VsZW1lbnQuYXBwZW5kQ2hpbGQodGFza0VsZW1lbnQpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3Qgbm90ZXNIZWFkaW5nRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XHJcbiAgICBub3Rlc0hlYWRpbmdFbGVtZW50LnRleHRDb250ZW50ID0gJ05vdGVzJztcclxuXHJcbiAgICBjb25zdCBub3Rlc0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBub3Rlc0VsZW1lbnQudGV4dENvbnRlbnQgPSBpdGVtLm5vdGVzO1xyXG5cclxuICAgIGNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgIGVkaXRCdXR0b24udGV4dENvbnRlbnQgPSAnRWRpdCc7XHJcbiAgICBlZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgLy8gSGFuZGxlIGVkaXQgZnVuY3Rpb25hbGl0eSBoZXJlXHJcbiAgICAgICAgZWRpdERpYWxvZy5zaG93TW9kYWwoKTtcclxuXHJcbiAgICAgICAgLy8gR2V0IHRoZSBwYXJlbnQgbGkgZWxlbWVudFxyXG4gICAgICAgIGNvbnN0IHBhcmVudExpID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJ2xpJyk7XHJcblxyXG4gICAgICAgIC8vIEdldCB0aGUgZGF0YS10b2RvLXByb2plY3QgYXR0cmlidXRlIHZhbHVlXHJcbiAgICAgICAgY29uc3QgdG9kb1Byb2plY3QgPSBwYXJlbnRMaS5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvamVjdC10b2RvJykuc3BsaXQoJy0nKS5tYXAoTnVtYmVyKTtcclxuICAgICAgICBzZXRQcm9qZWN0SW5kZXgodG9kb1Byb2plY3RbMF0pO1xyXG4gICAgICAgIHNldFRvZG9JbmRleCh0b2RvUHJvamVjdFsxXSk7XHJcbiAgICAgICAgY29uc3QgdGl0bGUgPSBpdGVtLnRpdGxlO1xyXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gaXRlbS5kZXNjcmlwdGlvbjtcclxuICAgICAgICBjb25zdCBkdWVEYXRlID0gaXRlbS5kdWVEYXRlO1xyXG4gICAgICAgIGNvbnN0IHByaW9yaXR5ID0gaXRlbS5wcmlvcml0eTtcclxuICAgICAgICBjb25zdCBjaGVja2xpc3QgPSBpdGVtLmNoZWNrbGlzdDtcclxuICAgICAgICBjb25zdCBub3RlcyA9IGl0ZW0ubm90ZXM7XHJcblxyXG4gICAgICAgIC8vIEpvaW4gdGhlIGNoZWNrbGlzdCBhcnJheSB3aXRoIGEgY29tbWEgYW5kIGEgbmV3IGxpbmVcclxuICAgICAgICBjb25zdCBjaGVja2xpc3RUZXh0ID0gY2hlY2tsaXN0LmpvaW4oJyxcXG4nKTtcclxuXHJcbiAgICAgICAgLy8gUG9wdWxhdGUgdGhlIGZvcm0gdmFsdWVzIGluIHRoZSBlZGl0IHRvLWRvIGRpYWxvZ1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tdGl0bGUnKS52YWx1ZSA9IHRpdGxlO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZGVzY3JpcHRpb24nKS52YWx1ZSA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZHVlLWRhdGUnKS52YWx1ZSA9IGR1ZURhdGU7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby1wcmlvcml0eScpLnZhbHVlID0gcHJpb3JpdHk7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby10YXNrcycpLnZhbHVlID0gY2hlY2tsaXN0VGV4dDtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZWRpdC10b2RvLW5vdGVzJykudmFsdWUgPSBub3RlcztcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgZGVsZXRlQnV0dG9uLnRleHRDb250ZW50ID0gJ0RlbGV0ZSc7XHJcbiAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgLy8gSGFuZGxlIGRlbGV0ZSBmdW5jdGlvbmFsaXR5IGhlcmVcclxuICAgICAgICBjb25zdCBwYXJlbnRMaSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCdsaScpO1xyXG4gICAgICAgIGNvbnN0IHRvZG9Qcm9qZWN0ID0gcGFyZW50TGkuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtdG9kbycpLnNwbGl0KCctJykubWFwKE51bWJlcik7XHJcbiAgICAgICAgY29uc3QgcHJvamVjdEluZGV4ID0gdG9kb1Byb2plY3RbMF07XHJcbiAgICAgICAgY29uc3QgdG9kb0luZGV4ID0gdG9kb1Byb2plY3RbMV07XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSB0b2RvIGl0ZW0gZnJvbSB0aGUgcHJvamVjdFxyXG4gICAgICAgIGNvbnN0IHByb2plY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJvamVjdHMnKSk7XHJcbiAgICAgICAgcHJvamVjdHNbcHJvamVjdEluZGV4XS50b2RvSXRlbXMuc3BsaWNlKHRvZG9JbmRleCwgMSk7XHJcbiAgICAgICAgbWFpbkNvbnRlbnREaXYuaW5uZXJIVE1MPVwiXCI7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RzJyxKU09OLnN0cmluZ2lmeShwcm9qZWN0cykpO1xyXG4gICAgICAgIGNyZWF0ZVRvZGF5KCk7XHJcbiAgICAgICAgXHJcbiAgICB9KTtcclxuXHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKHRpdGxlRWxlbWVudCk7XHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uRWxlbWVudCk7XHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKGR1ZURhdGVFbGVtZW50KTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQocHJpb3JpdHlFbGVtZW50KTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQodGFza3NIZWFkaW5nRWxlbWVudCk7XHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKHRhc2tzRWxlbWVudCk7XHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKG5vdGVzSGVhZGluZ0VsZW1lbnQpO1xyXG4gICAgZGV0YWlsc0Rpdi5hcHBlbmRDaGlsZChub3Rlc0VsZW1lbnQpO1xyXG4gICAgZGV0YWlsc0Rpdi5hcHBlbmRDaGlsZChlZGl0QnV0dG9uKTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcclxuXHJcbiAgICByZXR1cm4gZGV0YWlsc0RpdjtcclxufVxyXG5cclxuIiwiLyoqXG4gKiBHb29nbGUgQ2hyb21lIGFzIG9mIDY3LjAuMzM5Ni44NyBpbnRyb2R1Y2VkIHRpbWV6b25lcyB3aXRoIG9mZnNldCB0aGF0IGluY2x1ZGVzIHNlY29uZHMuXG4gKiBUaGV5IHVzdWFsbHkgYXBwZWFyIGZvciBkYXRlcyB0aGF0IGRlbm90ZSB0aW1lIGJlZm9yZSB0aGUgdGltZXpvbmVzIHdlcmUgaW50cm9kdWNlZFxuICogKGUuZy4gZm9yICdFdXJvcGUvUHJhZ3VlJyB0aW1lem9uZSB0aGUgb2Zmc2V0IGlzIEdNVCswMDo1Nzo0NCBiZWZvcmUgMSBPY3RvYmVyIDE4OTFcbiAqIGFuZCBHTVQrMDE6MDA6MDAgYWZ0ZXIgdGhhdCBkYXRlKVxuICpcbiAqIERhdGUjZ2V0VGltZXpvbmVPZmZzZXQgcmV0dXJucyB0aGUgb2Zmc2V0IGluIG1pbnV0ZXMgYW5kIHdvdWxkIHJldHVybiA1NyBmb3IgdGhlIGV4YW1wbGUgYWJvdmUsXG4gKiB3aGljaCB3b3VsZCBsZWFkIHRvIGluY29ycmVjdCBjYWxjdWxhdGlvbnMuXG4gKlxuICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB0aW1lem9uZSBvZmZzZXQgaW4gbWlsbGlzZWNvbmRzIHRoYXQgdGFrZXMgc2Vjb25kcyBpbiBhY2NvdW50LlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKGRhdGUpIHtcbiAgdmFyIHV0Y0RhdGUgPSBuZXcgRGF0ZShEYXRlLlVUQyhkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXREYXRlKCksIGRhdGUuZ2V0SG91cnMoKSwgZGF0ZS5nZXRNaW51dGVzKCksIGRhdGUuZ2V0U2Vjb25kcygpLCBkYXRlLmdldE1pbGxpc2Vjb25kcygpKSk7XG4gIHV0Y0RhdGUuc2V0VVRDRnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpIC0gdXRjRGF0ZS5nZXRUaW1lKCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgX3R5cGVvZihvKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1aXJlZEFyZ3MocmVxdWlyZWQsIGFyZ3MpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoIDwgcmVxdWlyZWQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHJlcXVpcmVkICsgJyBhcmd1bWVudCcgKyAocmVxdWlyZWQgPiAxID8gJ3MnIDogJycpICsgJyByZXF1aXJlZCwgYnV0IG9ubHkgJyArIGFyZ3MubGVuZ3RoICsgJyBwcmVzZW50Jyk7XG4gIH1cbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIHN0YXJ0T2ZEYXlcbiAqIEBjYXRlZ29yeSBEYXkgSGVscGVyc1xuICogQHN1bW1hcnkgUmV0dXJuIHRoZSBzdGFydCBvZiBhIGRheSBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgZGF5IGZvciB0aGUgZ2l2ZW4gZGF0ZS5cbiAqIFRoZSByZXN1bHQgd2lsbCBiZSBpbiB0aGUgbG9jYWwgdGltZXpvbmUuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBvcmlnaW5hbCBkYXRlXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHN0YXJ0IG9mIGEgZGF5XG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gVGhlIHN0YXJ0IG9mIGEgZGF5IGZvciAyIFNlcHRlbWJlciAyMDE0IDExOjU1OjAwOlxuICogY29uc3QgcmVzdWx0ID0gc3RhcnRPZkRheShuZXcgRGF0ZSgyMDE0LCA4LCAyLCAxMSwgNTUsIDApKVxuICogLy89PiBUdWUgU2VwIDAyIDIwMTQgMDA6MDA6MDBcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZkRheShkaXJ0eURhdGUpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCBfdHlwZW9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2ZcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIHRvRGF0ZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb252ZXJ0IHRoZSBnaXZlbiBhcmd1bWVudCB0byBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYW4gaW5zdGFuY2Ugb2YgRGF0ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgaXRzIGNsb25lLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBhIG51bWJlciwgaXQgaXMgdHJlYXRlZCBhcyBhIHRpbWVzdGFtcC5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgbm9uZSBvZiB0aGUgYWJvdmUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIEludmFsaWQgRGF0ZS5cbiAqXG4gKiAqKk5vdGUqKjogKmFsbCogRGF0ZSBhcmd1bWVudHMgcGFzc2VkIHRvIGFueSAqZGF0ZS1mbnMqIGZ1bmN0aW9uIGlzIHByb2Nlc3NlZCBieSBgdG9EYXRlYC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBhcmd1bWVudCAtIHRoZSB2YWx1ZSB0byBjb252ZXJ0XG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHBhcnNlZCBkYXRlIGluIHRoZSBsb2NhbCB0aW1lIHpvbmVcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDbG9uZSB0aGUgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZShuZXcgRGF0ZSgyMDE0LCAxLCAxMSwgMTEsIDMwLCAzMCkpXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHRoZSB0aW1lc3RhbXAgdG8gZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZSgxMzkyMDk4NDMwMDAwKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgYXJnU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50KTtcblxuICAvLyBDbG9uZSB0aGUgZGF0ZVxuICBpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8IF90eXBlb2YoYXJndW1lbnQpID09PSAnb2JqZWN0JyAmJiBhcmdTdHIgPT09ICdbb2JqZWN0IERhdGVdJykge1xuICAgIC8vIFByZXZlbnQgdGhlIGRhdGUgdG8gbG9zZSB0aGUgbWlsbGlzZWNvbmRzIHdoZW4gcGFzc2VkIHRvIG5ldyBEYXRlKCkgaW4gSUUxMFxuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudC5nZXRUaW1lKCkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBhcmd1bWVudCA9PT0gJ251bWJlcicgfHwgYXJnU3RyID09PSAnW29iamVjdCBOdW1iZXJdJykge1xuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IGFyZ1N0ciA9PT0gJ1tvYmplY3QgU3RyaW5nXScpICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcIlN0YXJ0aW5nIHdpdGggdjIuMC4wLWJldGEuMSBkYXRlLWZucyBkb2Vzbid0IGFjY2VwdCBzdHJpbmdzIGFzIGRhdGUgYXJndW1lbnRzLiBQbGVhc2UgdXNlIGBwYXJzZUlTT2AgdG8gcGFyc2Ugc3RyaW5ncy4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjc3RyaW5nLWFyZ3VtZW50c1wiKTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4obmV3IEVycm9yKCkuc3RhY2spO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxufSIsImltcG9ydCBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMgZnJvbSBcImRhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyRGF5c1wiO1xyXG5pbXBvcnQgeyByZW5kZXJUb2RheSxtYWluQ29udGVudERpdiB9IGZyb20gXCIuL3RvZGF5XCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVGhpc1dlZWsoKSB7XHJcbiAgICBjb25zdCBwcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Byb2plY3RzJykpO1xyXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICBjb25zdCB0b2RheSA9IGRhdGUudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCk7XHJcbiAgICBjb25zdCB0aGlzV2Vla0l0ZW1zID0gW107XHJcblxyXG4gICAgcHJvamVjdHMuZm9yRWFjaCgocHJvamVjdCwgcHJvamVjdEluZGV4KSA9PiB7XHJcbiAgICAgICAgcHJvamVjdC50b2RvSXRlbXMuZm9yRWFjaCgodG9kbywgdG9kb0luZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGR1ZURhdGUgPSBuZXcgRGF0ZSh0b2RvLmR1ZURhdGUpO1xyXG4gICAgICAgICAgICBjb25zdCBkYXlzRGlmZmVyZW5jZSA9IGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhkdWVEYXRlLGRhdGUpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGRheXNEaWZmZXJlbmNlIDw9IDcgJiYgZGF5c0RpZmZlcmVuY2UgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgdG9kby5wcm9qZWN0SW5kZXggPSBwcm9qZWN0SW5kZXg7XHJcbiAgICAgICAgICAgICAgICB0b2RvLnRvZG9JbmRleCA9IHRvZG9JbmRleDtcclxuICAgICAgICAgICAgICAgIHRoaXNXZWVrSXRlbXMucHVzaCh0b2RvKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzV2Vla0l0ZW1zKTtcclxuXHJcbiAgICBpZiAodGhpc1dlZWtJdGVtcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICBtYWluQ29udGVudERpdi50ZXh0Q29udGVudCA9IFwiTm8gdGFza3MgZm9yIHRvZGF5XCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIG1haW5Db250ZW50RGl2LmFwcGVuZENoaWxkKHJlbmRlclRvZGF5KHRoaXNXZWVrSXRlbXMpKTtcclxuICAgIH1cclxufSIsImltcG9ydCBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIGZyb20gXCIuLi9fbGliL2dldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMvaW5kZXguanNcIjtcbmltcG9ydCBzdGFydE9mRGF5IGZyb20gXCIuLi9zdGFydE9mRGF5L2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xudmFyIE1JTExJU0VDT05EU19JTl9EQVkgPSA4NjQwMDAwMDtcblxuLyoqXG4gKiBAbmFtZSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXNcbiAqIEBjYXRlZ29yeSBEYXkgSGVscGVyc1xuICogQHN1bW1hcnkgR2V0IHRoZSBudW1iZXIgb2YgY2FsZW5kYXIgZGF5cyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB0aGUgbnVtYmVyIG9mIGNhbGVuZGFyIGRheXMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMuIFRoaXMgbWVhbnMgdGhhdCB0aGUgdGltZXMgYXJlIHJlbW92ZWRcbiAqIGZyb20gdGhlIGRhdGVzIGFuZCB0aGVuIHRoZSBkaWZmZXJlbmNlIGluIGRheXMgaXMgY2FsY3VsYXRlZC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlTGVmdCAtIHRoZSBsYXRlciBkYXRlXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlUmlnaHQgLSB0aGUgZWFybGllciBkYXRlXG4gKiBAcmV0dXJucyB7TnVtYmVyfSB0aGUgbnVtYmVyIG9mIGNhbGVuZGFyIGRheXNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSG93IG1hbnkgY2FsZW5kYXIgZGF5cyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTEgMjM6MDA6MDAgYW5kIDIgSnVseSAyMDEyIDAwOjAwOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKFxuICogICBuZXcgRGF0ZSgyMDEyLCA2LCAyLCAwLCAwKSxcbiAqICAgbmV3IERhdGUoMjAxMSwgNiwgMiwgMjMsIDApXG4gKiApXG4gKiAvLz0+IDM2NlxuICogLy8gSG93IG1hbnkgY2FsZW5kYXIgZGF5cyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTEgMjM6NTk6MDAgYW5kIDMgSnVseSAyMDExIDAwOjAxOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAzLCAwLCAxKSxcbiAqICAgbmV3IERhdGUoMjAxMSwgNiwgMiwgMjMsIDU5KVxuICogKVxuICogLy89PiAxXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCkge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIHN0YXJ0T2ZEYXlMZWZ0ID0gc3RhcnRPZkRheShkaXJ0eURhdGVMZWZ0KTtcbiAgdmFyIHN0YXJ0T2ZEYXlSaWdodCA9IHN0YXJ0T2ZEYXkoZGlydHlEYXRlUmlnaHQpO1xuICB2YXIgdGltZXN0YW1wTGVmdCA9IHN0YXJ0T2ZEYXlMZWZ0LmdldFRpbWUoKSAtIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMoc3RhcnRPZkRheUxlZnQpO1xuICB2YXIgdGltZXN0YW1wUmlnaHQgPSBzdGFydE9mRGF5UmlnaHQuZ2V0VGltZSgpIC0gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhzdGFydE9mRGF5UmlnaHQpO1xuXG4gIC8vIFJvdW5kIHRoZSBudW1iZXIgb2YgZGF5cyB0byB0aGUgbmVhcmVzdCBpbnRlZ2VyXG4gIC8vIGJlY2F1c2UgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaW4gYSBkYXkgaXMgbm90IGNvbnN0YW50XG4gIC8vIChlLmcuIGl0J3MgZGlmZmVyZW50IGluIHRoZSBkYXkgb2YgdGhlIGRheWxpZ2h0IHNhdmluZyB0aW1lIGNsb2NrIHNoaWZ0KVxuICByZXR1cm4gTWF0aC5yb3VuZCgodGltZXN0YW1wTGVmdCAtIHRpbWVzdGFtcFJpZ2h0KSAvIE1JTExJU0VDT05EU19JTl9EQVkpO1xufSIsImltcG9ydCB7IGdldERlbGV0ZWRJdGVtc0Zyb21Mb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi90b0RvR1VJXCI7XHJcbmltcG9ydCB7IHJlbmRlclRvZGF5IH0gZnJvbSBcIi4vdG9kYXlcIjtcclxuXHJcbmNvbnN0IG1haW5Db250ZW50RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYXNoKCl7XHJcbiAgICBtYWluQ29udGVudERpdi5hcHBlbmRDaGlsZChyZW5kZXJUb2RheShnZXREZWxldGVkSXRlbXNGcm9tTG9jYWxTdG9yYWdlKCkpKTtcclxuXHJcbn0iLCJpbXBvcnQgcHJvamVjdCBmcm9tIFwiLi90b0RvXCI7XHJcbmltcG9ydCAnLi90b2RvLmNzcyc7XHJcbmltcG9ydCB7IGFkZGJ0biB9IGZyb20gXCIuL2NvbGxlY3REYXRhXCI7XHJcbmltcG9ydCBjcmVhdGVUb0RvUHJvamVjdCwgeyBjcmVhdGVUb0RvfSBmcm9tIFwiLi9jcmVhdGVUb0RvVGFza1wiO1xyXG5pbXBvcnQgeyBjcmVhdGVUb2RheSB9IGZyb20gXCIuL3RvZGF5XCI7XHJcbmltcG9ydCB7IGNyZWF0ZVRoaXNXZWVrIH0gZnJvbSBcIi4vdGhpc3dlZWtcIjtcclxuaW1wb3J0IHsgcmVjcmVhdGVQcm9qZWN0cyB9IGZyb20gXCIuL3Byb2plY3RzUmVjcmVhdGlvblwiO1xyXG5pbXBvcnQgeyBjcmVhdGVUcmFzaCB9IGZyb20gXCIuL3RyYXNoXCI7XHJcbmV4cG9ydCBsZXQgcHJvamVjdHM9W107XHJcbnByb2plY3RzLnB1c2gocHJvamVjdCk7XHJcbnByb2plY3RzLnB1c2goY3JlYXRlVG9Eb1Byb2plY3QoXCJNeSBQcm9qZWN0XCIsW2NyZWF0ZVRvRG8oXHJcbiAgICBcIk1pbGl0YXJ5IGdhZGdldCB1cGdyYWRlXCIsXHJcbiAgICBcIk1vZGlmeSB0aGUgbWlsaXRhcnkgZ2FkZ2V0IHRvIGJlIG1vcmUgcG93ZXJmdWxcIixcclxuICAgIFwiMjAyMi0xMi0zMFwiLFxyXG4gICAgXCJtZWRpdW1cIixcclxuICAgIFwiVGhlIGdhZGdldCBpcyB1c2VkIHRvIGRldGVjdCB0aGUgZW5lbXkncyBwb3NpdGlvbiBhbmQgYXR0YWNrIHRoZW1cIixcclxuICAgIFtcInRlc3QgYmFsbGlzdGljc1wiLCBcIm1pc3NpbGUgcHJlY2lzaW9uIHVwZ3JhZGVcIiwgXCJUZXN0IHRoZSBnYWRnZXQgaW4gdGhlIGZpZWxkXCJdXHJcbildKSk7XHJcbmxldCBwcm9qZWN0c19zZXJpYWxpemVkID0gSlNPTi5zdHJpbmdpZnkocHJvamVjdHMpO1xyXG5pZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHJvamVjdHNcIikpIHtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicHJvamVjdHNcIiwgcHJvamVjdHNfc2VyaWFsaXplZCk7XHJcbn1cclxuZWxzZXtcclxuICAgcHJvamVjdHM9Z2V0cHJvamVjdHNGcm9tTG9jYWxTdG9yYWdlKCk7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGNvbnRlbnREaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMnKTtcclxuY29uc3QgdG9Eb0RpYWxvZz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kby1kaWFsb2cnKTtcclxuZXhwb3J0IGNvbnN0IGVkaXREaWFsb2c9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby1kaWFsb2cnKTtcclxuZXhwb3J0IGxldCBwcm9qZWN0SW5kZXhlcjtcclxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclByb2plY3RzKHByb2plY3RzKSB7XHJcbiAgICBjb25zdCBQcm9qZWN0c0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcHJvamVjdHMuZm9yRWFjaCgocHJvamVjdCwgcHJvamVjdEluZGV4KSA9PiB7XHJcbiAgICAgICAgY29uc3QgcHJvamVjdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGNvbnN0IGgxRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XHJcbiAgICAgICAgY29uc3QgdG9kb0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xyXG5cclxuICAgICAgICBoMUVsZW1lbnQudGV4dENvbnRlbnQgPSBwcm9qZWN0Lm5hbWU7XHJcblxyXG4gICAgICAgIHByb2plY3QudG9kb0l0ZW1zLmZvckVhY2goKGl0ZW0sIHRvZG9JbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB0b2RvSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHRvZG9UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgICAgY29uc3QgdG9kb0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5Q2lyY2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IC8vIENyZWF0ZSB0aGUgY2lyY2xlIGVsZW1lbnRcclxuXHJcbiAgICAgICAgICAgIHRvZG9UaXRsZS50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGU7XHJcbiAgICAgICAgICAgIHRvZG9EdWVEYXRlLnRleHRDb250ZW50ID0gYCAtIER1ZSBEYXRlOiAke2l0ZW0uZHVlRGF0ZX1gO1xyXG5cclxuICAgICAgICAgICAgLy8gU2V0IHRoZSBjb2xvciBvZiB0aGUgY2lyY2xlIGJhc2VkIG9uIHByaW9yaXR5XHJcbiAgICAgICAgICAgIHByaW9yaXR5Q2lyY2xlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGdldFByaW9yaXR5Q29sb3IoaXRlbS5wcmlvcml0eSk7XHJcbiAgICAgICAgICAgIHByaW9yaXR5Q2lyY2xlLnN0eWxlLndpZHRoID0gJzEwcHgnO1xyXG4gICAgICAgICAgICBwcmlvcml0eUNpcmNsZS5zdHlsZS5oZWlnaHQgPSAnMTBweCc7XHJcbiAgICAgICAgICAgIHByaW9yaXR5Q2lyY2xlLnN0eWxlLmJvcmRlclJhZGl1cyA9ICc1MCUnO1xyXG4gICAgICAgICAgICBwcmlvcml0eUNpcmNsZS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgdGhlIGRhdGEgYXR0cmlidXRlIHdpdGggcHJvamVjdCBhbmQgdG9kbyBpdGVtIGluZGljZXNcclxuICAgICAgICAgICAgdG9kb0l0ZW0uc2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtdG9kbycsIGAke3Byb2plY3RJbmRleH0tJHt0b2RvSW5kZXh9YCk7XHJcbiAgICAgICAgICAgIHRvZG9JdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdG9kb0l0ZW0uY2xhc3NMaXN0LnRvZ2dsZSgnZXhwYW5kZWQnKTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmICh0b2RvSXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ2V4cGFuZGVkJykpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbmRleEFycmF5ID0gdG9kb0l0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtdG9kbycpLnNwbGl0KCctJykubWFwKE51bWJlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9kb0RldGFpbHNEaXYgPSBjcmVhdGVUb0RvRGV0YWlsc0RpdihnZXRwcm9qZWN0c0Zyb21Mb2NhbFN0b3JhZ2UoKVtpbmRleEFycmF5WzBdXS50b2RvSXRlbXNbaW5kZXhBcnJheVsxXV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHRvZG9JdGVtLmFwcGVuZENoaWxkKHRvZG9EZXRhaWxzRGl2KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9kb0RldGFpbHNEaXYgPSB0b2RvSXRlbS5xdWVyeVNlbGVjdG9yKCcudG9kby1kZXRhaWxzJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvZG9EZXRhaWxzRGl2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EZXRhaWxzRGl2LnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB0b2RvSXRlbS5hcHBlbmRDaGlsZChwcmlvcml0eUNpcmNsZSk7IC8vIEFkZCB0aGUgY2lyY2xlIGVsZW1lbnQgdG8gdGhlIHRvZG8gaXRlbVxyXG4gICAgICAgICAgICB0b2RvSXRlbS5hcHBlbmRDaGlsZCh0b2RvVGl0bGUpO1xyXG4gICAgICAgICAgICB0b2RvSXRlbS5hcHBlbmRDaGlsZCh0b2RvRHVlRGF0ZSk7XHJcbiAgICAgICAgICAgIHRvZG9MaXN0LmFwcGVuZENoaWxkKHRvZG9JdGVtKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcHJvamVjdERpdi5hcHBlbmRDaGlsZChoMUVsZW1lbnQpO1xyXG4gICAgICAgIHByb2plY3REaXYuYXBwZW5kQ2hpbGQodG9kb0xpc3QpO1xyXG5cclxuICAgICAgICAvLyBDcmVhdGUgdGhlIGFkZCBidXR0b25cclxuICAgICAgICBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBhZGRCdXR0b24udGV4dENvbnRlbnQgPSAnQWRkIFRvLURvJztcclxuICAgICAgICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtaW5kZXgnLCBwcm9qZWN0SW5kZXgpOyAvLyBBZGQgZGF0YSBhdHRyaWJ1dGUgd2l0aCBwcm9qZWN0IGluZGV4XHJcbiAgICAgICAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBIYW5kbGUgdGhlIGFkZCB0by1kbyBidXR0b24gY2xpY2sgZXZlbnRcclxuICAgICAgICAgICAgLy8gQWRkIHlvdXIgbG9naWMgaGVyZVxyXG4gICAgICAgICAgICB0b0RvRGlhbG9nLnNob3dNb2RhbCgpO1xyXG4gICAgICAgICAgICBwcm9qZWN0SW5kZXhlcj1hZGRCdXR0b24uZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtaW5kZXgnKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcHJvamVjdERpdi5hcHBlbmRDaGlsZChhZGRCdXR0b24pOyAvLyBBcHBlbmQgdGhlIGFkZCBidXR0b24gdG8gdGhlIHByb2plY3QgZGl2XHJcbiAgICAgICAgUHJvamVjdHNEaXYuYXBwZW5kQ2hpbGQocHJvamVjdERpdik7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gUHJvamVjdHNEaXY7XHJcbn1cclxuXHJcbmNvbnRlbnREaXYuYXBwZW5kQ2hpbGQocmVuZGVyUHJvamVjdHMoZ2V0cHJvamVjdHNGcm9tTG9jYWxTdG9yYWdlKCkpKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmlvcml0eUNvbG9yKHByaW9yaXR5KSB7XHJcbiAgICBzd2l0Y2ggKHByaW9yaXR5KSB7XHJcbiAgICAgICAgY2FzZSAnaGlnaCc6XHJcbiAgICAgICAgICAgIHJldHVybiAncmVkJztcclxuICAgICAgICBjYXNlICdtZWRpdW0nOlxyXG4gICAgICAgICAgICByZXR1cm4gJ3llbGxvdyc7XHJcbiAgICAgICAgY2FzZSAnbG93JzpcclxuICAgICAgICAgICAgcmV0dXJuICdncmVlbic7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuICdncmF5JztcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0cHJvamVjdHNGcm9tTG9jYWxTdG9yYWdlKCkge1xyXG4gICAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcm9qZWN0cycpKTtcclxuICAgIHJldHVybiBwcm9qZWN0cztcclxufVxyXG5jb25zb2xlLmxvZyhwcm9qZWN0LnRvZG9JdGVtc1swXS5wcmlvcml0eSk7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRvRG9EZXRhaWxzRGl2KGl0ZW0pIHtcclxuICAgIGNvbnN0IGRldGFpbHNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGRldGFpbHNEaXYuY2xhc3NMaXN0LmFkZCgndG9kby1kZXRhaWxzJyk7XHJcblxyXG4gICAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcclxuICAgIHRpdGxlRWxlbWVudC50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGU7XHJcblxyXG4gICAgY29uc3QgZGVzY3JpcHRpb25FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgZGVzY3JpcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gaXRlbS5kZXNjcmlwdGlvbjtcclxuXHJcbiAgICBjb25zdCBkdWVEYXRlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIGR1ZURhdGVFbGVtZW50LnRleHRDb250ZW50ID0gYER1ZSBEYXRlOiAke2l0ZW0uZHVlRGF0ZX1gO1xyXG5cclxuICAgIGNvbnN0IHByaW9yaXR5RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIHByaW9yaXR5RWxlbWVudC50ZXh0Q29udGVudCA9IGBQcmlvcml0eTogJHtpdGVtLnByaW9yaXR5fWA7XHJcblxyXG4gICAgY29uc3QgdGFza3NIZWFkaW5nRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XHJcbiAgICB0YXNrc0hlYWRpbmdFbGVtZW50LnRleHRDb250ZW50ID0gJ1Rhc2tzJztcclxuXHJcbiAgICBjb25zdCB0YXNrc0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xyXG4gICAgaXRlbS5jaGVja2xpc3QuZm9yRWFjaCh0YXNrID0+IHtcclxuICAgICAgICBjb25zdCB0YXNrRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgdGFza0VsZW1lbnQudGV4dENvbnRlbnQgPSB0YXNrO1xyXG4gICAgICAgIHRhc2tzRWxlbWVudC5hcHBlbmRDaGlsZCh0YXNrRWxlbWVudCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBub3Rlc0hlYWRpbmdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcclxuICAgIG5vdGVzSGVhZGluZ0VsZW1lbnQudGV4dENvbnRlbnQgPSAnTm90ZXMnO1xyXG5cclxuICAgIGNvbnN0IG5vdGVzRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIG5vdGVzRWxlbWVudC50ZXh0Q29udGVudCA9IGl0ZW0ubm90ZXM7XHJcblxyXG4gICAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgZWRpdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdFZGl0JztcclxuICAgIGVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAvLyBIYW5kbGUgZWRpdCBmdW5jdGlvbmFsaXR5IGhlcmVcclxuICAgICAgICBlZGl0RGlhbG9nLnNob3dNb2RhbCgpO1xyXG5cclxuICAgICAgICAvLyBHZXQgdGhlIHBhcmVudCBsaSBlbGVtZW50XHJcbiAgICAgICAgY29uc3QgcGFyZW50TGkgPSBldmVudC50YXJnZXQuY2xvc2VzdCgnbGknKTtcclxuXHJcbiAgICAgICAgLy8gR2V0IHRoZSBkYXRhLXRvZG8tcHJvamVjdCBhdHRyaWJ1dGUgdmFsdWVcclxuICAgICAgICBjb25zdCB0b2RvUHJvamVjdCA9IHBhcmVudExpLmdldEF0dHJpYnV0ZSgnZGF0YS1wcm9qZWN0LXRvZG8nKS5zcGxpdCgnLScpLm1hcChOdW1iZXIpO1xyXG4gICAgICAgIHByb2plY3RpbmRleDIgPSB0b2RvUHJvamVjdFswXTtcclxuICAgICAgICB0b2RvaW5kZXgyID0gdG9kb1Byb2plY3RbMV07XHJcbiAgICAgICAgY29uc3QgdGl0bGUgPSBpdGVtLnRpdGxlO1xyXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gaXRlbS5kZXNjcmlwdGlvbjtcclxuICAgICAgICBjb25zdCBkdWVEYXRlID0gaXRlbS5kdWVEYXRlO1xyXG4gICAgICAgIGNvbnN0IHByaW9yaXR5ID0gaXRlbS5wcmlvcml0eTtcclxuICAgICAgICBjb25zdCBjaGVja2xpc3QgPSBpdGVtLmNoZWNrbGlzdDtcclxuICAgICAgICBjb25zdCBub3RlcyA9IGl0ZW0ubm90ZXM7XHJcblxyXG4gICAgICAgIC8vIEpvaW4gdGhlIGNoZWNrbGlzdCBhcnJheSB3aXRoIGEgY29tbWEgYW5kIGEgbmV3IGxpbmVcclxuICAgICAgICBjb25zdCBjaGVja2xpc3RUZXh0ID0gY2hlY2tsaXN0LmpvaW4oJyxcXG4nKTtcclxuXHJcbiAgICAgICAgLy8gUG9wdWxhdGUgdGhlIGZvcm0gdmFsdWVzIGluIHRoZSBlZGl0IHRvLWRvIGRpYWxvZ1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tdGl0bGUnKS52YWx1ZSA9IHRpdGxlO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZGVzY3JpcHRpb24nKS52YWx1ZSA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZHVlLWRhdGUnKS52YWx1ZSA9IGR1ZURhdGU7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby1wcmlvcml0eScpLnZhbHVlID0gcHJpb3JpdHk7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby10YXNrcycpLnZhbHVlID0gY2hlY2tsaXN0VGV4dDtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZWRpdC10b2RvLW5vdGVzJykudmFsdWUgPSBub3RlcztcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgZGVsZXRlQnV0dG9uLnRleHRDb250ZW50ID0gJ0RlbGV0ZSc7XHJcbiAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgLy8gSGFuZGxlIGRlbGV0ZSBmdW5jdGlvbmFsaXR5IGhlcmVcclxuICAgICAgICBjb25zdCBwYXJlbnRMaSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCdsaScpO1xyXG4gICAgICAgIGNvbnN0IHRvZG9Qcm9qZWN0ID0gcGFyZW50TGkuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtdG9kbycpLnNwbGl0KCctJykubWFwKE51bWJlcik7XHJcbiAgICAgICAgY29uc3QgcHJvamVjdEluZGV4ID0gdG9kb1Byb2plY3RbMF07XHJcbiAgICAgICAgY29uc3QgdG9kb0luZGV4ID0gdG9kb1Byb2plY3RbMV07XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSB0b2RvIGl0ZW0gZnJvbSB0aGUgcHJvamVjdFxyXG4gICAgICAgIGxldCBkZWxldGVkSXRlbXM9W107XHJcbiAgICAgICAgZGVsZXRlZEl0ZW1zLnB1c2gocHJvamVjdHNbcHJvamVjdEluZGV4XS50b2RvSXRlbXNbdG9kb0luZGV4XSk7XHJcbiAgICAgICAgaWYoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkZWxldGVkSXRlbXMnKSl7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkZWxldGVkSXRlbXMnLEpTT04uc3RyaW5naWZ5KGRlbGV0ZWRJdGVtcykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBsZXQgZGVsZXRlZEl0ZW1zPWdldERlbGV0ZWRJdGVtc0Zyb21Mb2NhbFN0b3JhZ2UoKTtcclxuICAgICAgICAgICAgZGVsZXRlZEl0ZW1zLnB1c2gocHJvamVjdHNbcHJvamVjdEluZGV4XS50b2RvSXRlbXNbdG9kb0luZGV4XSk7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkZWxldGVkSXRlbXMnLEpTT04uc3RyaW5naWZ5KGRlbGV0ZWRJdGVtcykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBjb250ZW50RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RzJyk7XHJcbiAgICAgICAgcHJvamVjdHNbcHJvamVjdEluZGV4XS50b2RvSXRlbXMuc3BsaWNlKHRvZG9JbmRleCwgMSk7XHJcbiAgICAgICAgY29udGVudERpdi5pbm5lckhUTUw9XCJcIjtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvamVjdHMnLEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7IFxyXG4gICAgICAgIGNvbnRlbnREaXYuYXBwZW5kQ2hpbGQocmVuZGVyUHJvamVjdHMoZ2V0cHJvamVjdHNGcm9tTG9jYWxTdG9yYWdlKCkpKTtcclxuICAgICAgICBcclxuICAgIH0pO1xyXG5cclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQodGl0bGVFbGVtZW50KTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25FbGVtZW50KTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQoZHVlRGF0ZUVsZW1lbnQpO1xyXG4gICAgZGV0YWlsc0Rpdi5hcHBlbmRDaGlsZChwcmlvcml0eUVsZW1lbnQpO1xyXG4gICAgZGV0YWlsc0Rpdi5hcHBlbmRDaGlsZCh0YXNrc0hlYWRpbmdFbGVtZW50KTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQodGFza3NFbGVtZW50KTtcclxuICAgIGRldGFpbHNEaXYuYXBwZW5kQ2hpbGQobm90ZXNIZWFkaW5nRWxlbWVudCk7XHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKG5vdGVzRWxlbWVudCk7XHJcbiAgICBkZXRhaWxzRGl2LmFwcGVuZENoaWxkKGVkaXRCdXR0b24pO1xyXG4gICAgZGV0YWlsc0Rpdi5hcHBlbmRDaGlsZChkZWxldGVCdXR0b24pO1xyXG5cclxuICAgIHJldHVybiBkZXRhaWxzRGl2O1xyXG59XHJcbmNvbnN0IGVkaXRDb25maXJtQnRuPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZGlhbG9nICNjb25maXJtJyk7XHJcbmxldCBwcm9qZWN0aW5kZXgyO1xyXG5sZXQgdG9kb2luZGV4MjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRQcm9qZWN0SW5kZXgoaW5kZXgpIHtcclxuICAgIHByb2plY3RpbmRleDIgPSBpbmRleDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFRvZG9JbmRleChpbmRleCkge1xyXG4gICAgdG9kb2luZGV4MiA9IGluZGV4O1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWxldGVkSXRlbXNGcm9tTG9jYWxTdG9yYWdlKCl7XHJcbiAgICBjb25zdCBkZWxldGVkSXRlbXM9SlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZGVsZXRlZEl0ZW1zJykpO1xyXG4gICAgcmV0dXJuIGRlbGV0ZWRJdGVtcztcclxufVxyXG5cclxuZWRpdENvbmZpcm1CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBjb25zdCB0b2RvSXRlbSA9IHByb2plY3RzW3Byb2plY3RpbmRleDJdLnRvZG9JdGVtc1t0b2RvaW5kZXgyXTtcclxuICAgIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZWRpdC10b2RvLWRpYWxvZyAjZWRpdC10b2RvLXRpdGxlJyk7XHJcbiAgICBjb25zdCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby1kaWFsb2cgI2VkaXQtdG9kby1kZXNjcmlwdGlvbicpO1xyXG4gICAgY29uc3QgZHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtdG9kby1kaWFsb2cgI2VkaXQtdG9kby1kdWUtZGF0ZScpO1xyXG4gICAgY29uc3QgcHJpb3JpdHlJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZGlhbG9nICNlZGl0LXRvZG8tcHJpb3JpdHknKTtcclxuICAgIGNvbnN0IG5vdGVzSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZWRpdC10b2RvLWRpYWxvZyAjZWRpdC10b2RvLW5vdGVzJyk7XHJcbiAgICBjb25zdCBjaGVja2xpc3RJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRvZG8tZGlhbG9nICNlZGl0LXRvZG8tdGFza3MnKTtcclxuXHJcbiAgICB0b2RvSXRlbS50aXRsZSA9IHRpdGxlSW5wdXQudmFsdWU7XHJcbiAgICB0b2RvSXRlbS5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uSW5wdXQudmFsdWU7XHJcbiAgICB0b2RvSXRlbS5kdWVEYXRlID0gZHVlRGF0ZUlucHV0LnZhbHVlO1xyXG4gICAgdG9kb0l0ZW0ucHJpb3JpdHkgPSBwcmlvcml0eUlucHV0LnZhbHVlO1xyXG4gICAgdG9kb0l0ZW0ubm90ZXMgPSBub3Rlc0lucHV0LnZhbHVlO1xyXG4gICAgdG9kb0l0ZW0uY2hlY2tsaXN0ID0gY2hlY2tsaXN0SW5wdXQudmFsdWUuc3BsaXQoJywnKTtcclxuICAgIGNvbnRlbnREaXYuaW5uZXJIVE1MPVwiXCI7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvamVjdHMnLEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7XHJcbiAgICBjb250ZW50RGl2LmFwcGVuZENoaWxkKHJlbmRlclByb2plY3RzKGdldHByb2plY3RzRnJvbUxvY2FsU3RvcmFnZSgpKSk7XHJcbiAgICBpZihwYW5lbD09XCJUb2RheVwiKXtcclxuICAgICAgICBtYWluQ29udGVudC5pbm5lckhUTUw9XCJcIjtcclxuICAgICAgICBjcmVhdGVUb2RheSgpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgZWxzZSBpZihwYW5lbD09XCJOZXh0IDcgRGF5c1wiKXtcclxuICAgICAgICBtYWluQ29udGVudC5pbm5lckhUTUw9XCJcIjtcclxuICAgICAgICBjcmVhdGVUaGlzV2VlaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFVwZGF0ZSB0aGUgVUkgb3IgcGVyZm9ybSBhbnkgb3RoZXIgbmVjZXNzYXJ5IGFjdGlvbnNcclxufSk7XHJcbmxldCBwYW5lbDtcclxuY29uc3QgbWFpbkNvbnRlbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcclxuY29uc3Qgc2lkZWRpdnM9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNpZGViYXI+ZGl2Jyk7XHJcbnNpZGVkaXZzLmZvckVhY2goKGRpdikgPT4ge1xyXG4gICAgZGl2LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgIC8vIFJlbW92ZSB0aGUgYWN0aXZlIGNsYXNzIGZyb20gYWxsIGRpdnNcclxuICAgICAgICBzaWRlZGl2cy5mb3JFYWNoKChkaXYpID0+IHtcclxuICAgICAgICAgICAgZGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICAvLyBBZGQgdGhlIGFjdGl2ZSBjbGFzcyB0byB0aGUgY2xpY2tlZCBkaXZcclxuICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgbWFpbkNvbnRlbnQuaW5uZXJIVE1MPVwiXCI7XHJcbiAgICAgICAgcGFuZWw9ZGl2LnRleHRDb250ZW50O1xyXG4gICAgICAgIGlmKHBhbmVsPT1cIlByb2plY3RzXCIpe1xyXG4gICAgICAgICAgICByZWNyZWF0ZVByb2plY3RzKG1haW5Db250ZW50KTtcclxuICAgICAgICAgICAgY29uc3QgY29udGVudERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cycpO1xyXG4gICAgICAgICAgICBjb250ZW50RGl2LmFwcGVuZENoaWxkKHJlbmRlclByb2plY3RzKGdldHByb2plY3RzRnJvbUxvY2FsU3RvcmFnZSgpKSk7XHJcbiAgICAgICAgICAgIHJlY3JlYXRlTGlzdGVuZXJzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYocGFuZWw9PVwiVG9kYXlcIil7XHJcbiAgICAgICAgICAgIGNyZWF0ZVRvZGF5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYocGFuZWw9PVwiTmV4dCA3IERheXNcIil7XHJcbiAgICAgICAgICAgIGNyZWF0ZVRoaXNXZWVrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYocGFuZWw9PVwiVHJhc2hcIil7XHJcbiAgICAgICAgICAgIGNyZWF0ZVRyYXNoKCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH0pO1xyXG59KTtcclxuZnVuY3Rpb24gcmVjcmVhdGVMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBhZGRidG49ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1idXR0b24nKTtcclxuICAgIGNvbnN0IGRpYWxvZz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuUHJvamVjdC1kaWFsb2cnKTtcclxuICAgIGFkZGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcclxuICAgICAgICBkaWFsb2cuc2hvd01vZGFsKCk7XHJcbiAgICB9KTtcclxuICAgIFxyXG59XHJcblxyXG4iLCJleHBvcnQgZnVuY3Rpb24gcmVjcmVhdGVQcm9qZWN0cyhtYWluU2VjdGlvbil7XHJcbiAgICBjb25zdCBhZGRQcm9qZWN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBhZGRQcm9qZWN0RGl2LmNsYXNzTGlzdC5hZGQoJ2FkZC1wcm9qZWN0Jyk7XHJcbiAgICBjb25zdCBhZGRQcm9qZWN0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBhZGRQcm9qZWN0QnRuLmNsYXNzTGlzdC5hZGQoJ2FkZC1idXR0b24nKTtcclxuICAgIGNvbnN0IHBsdXNJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xyXG4gICAgcGx1c0ljb24uY2xhc3NMaXN0LmFkZCgnZmFzJyk7XHJcbiAgICBwbHVzSWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1wbHVzJyk7XHJcbiAgICBhZGRQcm9qZWN0QnRuLmFwcGVuZENoaWxkKHBsdXNJY29uKTtcclxuICAgIGNvbnN0IGFkZFByb2plY3RUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgYWRkUHJvamVjdFRleHQudGV4dENvbnRlbnQgPSAnQWRkIFByb2plY3QnO1xyXG4gICAgYWRkUHJvamVjdFRleHQuY2xhc3NMaXN0LmFkZCgnYWRkLXByb2plY3QtdGV4dCcpO1xyXG4gICAgYWRkUHJvamVjdERpdi5hcHBlbmRDaGlsZChhZGRQcm9qZWN0QnRuKTtcclxuICAgIGFkZFByb2plY3REaXYuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdFRleHQpO1xyXG4gICAgY29uc3QgcHJvamVjdHNEaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwcm9qZWN0c0Rpdi5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0cycpO1xyXG4gICAgbWFpblNlY3Rpb24uYXBwZW5kQ2hpbGQoYWRkUHJvamVjdERpdik7XHJcbiAgICBtYWluU2VjdGlvbi5hcHBlbmRDaGlsZChwcm9qZWN0c0Rpdik7XHJcbn0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiY3JlYXRlVG9kb0l0ZW0iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5Iiwibm90ZXMiLCJjaGVja2xpc3QiLCJjb21wbGV0ZSIsImFkZEl0ZW1Ub0NoZWNrbGlzdCIsInJlbW92ZUl0ZW1Gcm9tQ2hlY2tsaXN0IiwiaW5kZXhPZiIsInRvZG9JdGVtIiwidG9kb0l0ZW0xIiwiY3JlYXRlUHJvamVjdCIsIm5hbWUiLCJ0b2RvSXRlbXMiLCJhZGRUb2RvIiwidG9kbyIsInJlbW92ZVRvZG8iLCJwcm9qZWN0IiwiY3JlYXRlVG9EbyIsImxvY2FscyIsImFkZGJ0biIsImRpYWxvZyIsImFkZEV2ZW50TGlzdGVuZXIiLCJzaG93TW9kYWwiLCJwcm9qZWN0bmFtZSIsImNvbmZpcm1CdG4iLCJ0b0RvQ29uZmlybUJ0biIsInZhbHVlIiwicHJvamVjdHMiLCJjb250ZW50RGl2IiwiaW5uZXJIVE1MIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInJlbmRlclByb2plY3RzIiwiZ2V0cHJvamVjdHNGcm9tTG9jYWxTdG9yYWdlIiwidGFza3MiLCJwcm9qZWN0SW5kZXgiLCJwcm9qZWN0SW5kZXhlciIsIm1haW5Db250ZW50RGl2IiwiY3JlYXRlVG9kYXkiLCJwYXJzZSIsImdldEl0ZW0iLCJ0b2RheSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInNsaWNlIiwidG9kYXlJdGVtcyIsImZvckVhY2giLCJ0b2RvSW5kZXgiLCJ0ZXh0Q29udGVudCIsInJlbmRlclRvZGF5IiwidG9kYXlUb2RvcyIsIlByb2plY3RzRGl2IiwicHJvamVjdERpdiIsImNsYXNzTGlzdCIsImFkZCIsInRvZG9MaXN0IiwidG9kb1RpdGxlIiwidG9kb0R1ZURhdGUiLCJwcmlvcml0eUNpcmNsZSIsImJhY2tncm91bmRDb2xvciIsImdldFByaW9yaXR5Q29sb3IiLCJ3aWR0aCIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsImRpc3BsYXkiLCJ0b2dnbGUiLCJjb250YWlucyIsInRvZG9EZXRhaWxzRGl2IiwiZGV0YWlsc0RpdiIsInRpdGxlRWxlbWVudCIsImRlc2NyaXB0aW9uRWxlbWVudCIsImR1ZURhdGVFbGVtZW50IiwicHJpb3JpdHlFbGVtZW50IiwidGFza3NIZWFkaW5nRWxlbWVudCIsInRhc2tzRWxlbWVudCIsInRhc2siLCJ0YXNrRWxlbWVudCIsIm5vdGVzSGVhZGluZ0VsZW1lbnQiLCJub3Rlc0VsZW1lbnQiLCJlZGl0QnV0dG9uIiwiZXZlbnQiLCJlZGl0RGlhbG9nIiwidG9kb1Byb2plY3QiLCJjbG9zZXN0IiwiZ2V0QXR0cmlidXRlIiwic3BsaXQiLCJOdW1iZXIiLCJzZXRQcm9qZWN0SW5kZXgiLCJzZXRUb2RvSW5kZXgiLCJjaGVja2xpc3RUZXh0IiwiZGVsZXRlQnV0dG9uIiwiY3JlYXRlVG9Eb0RldGFpbHNEaXYiLCJnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIiwiZGF0ZSIsInV0Y0RhdGUiLCJVVEMiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJnZXRNaWxsaXNlY29uZHMiLCJzZXRVVENGdWxsWWVhciIsImdldFRpbWUiLCJfdHlwZW9mIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInJlcXVpcmVkQXJncyIsInJlcXVpcmVkIiwiYXJncyIsIlR5cGVFcnJvciIsInN0YXJ0T2ZEYXkiLCJkaXJ0eURhdGUiLCJhcmd1bWVudHMiLCJhcmd1bWVudCIsImFyZ1N0ciIsImNvbnNvbGUiLCJ3YXJuIiwic3RhY2siLCJOYU4iLCJ0b0RhdGUiLCJzZXRIb3VycyIsImNyZWF0ZVRoaXNXZWVrIiwidGhpc1dlZWtJdGVtcyIsImRheXNEaWZmZXJlbmNlIiwiZGlydHlEYXRlTGVmdCIsImRpcnR5RGF0ZVJpZ2h0Iiwic3RhcnRPZkRheUxlZnQiLCJzdGFydE9mRGF5UmlnaHQiLCJ0aW1lc3RhbXBMZWZ0IiwidGltZXN0YW1wUmlnaHQiLCJNYXRoIiwicm91bmQiLCJkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMiLCJsb2ciLCJwcm9qZWN0c19zZXJpYWxpemVkIiwidG9Eb0RpYWxvZyIsInByb2plY3RpbmRleDIiLCJ0b2RvaW5kZXgyIiwicGFuZWwiLCJoMUVsZW1lbnQiLCJpbmRleEFycmF5IiwiYWRkQnV0dG9uIiwiZGVsZXRlZEl0ZW1zIiwiZ2V0RGVsZXRlZEl0ZW1zRnJvbUxvY2FsU3RvcmFnZSIsInRpdGxlSW5wdXQiLCJkZXNjcmlwdGlvbklucHV0IiwiZHVlRGF0ZUlucHV0IiwicHJpb3JpdHlJbnB1dCIsIm5vdGVzSW5wdXQiLCJjaGVja2xpc3RJbnB1dCIsIm1haW5Db250ZW50Iiwic2lkZWRpdnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGl2IiwibWFpblNlY3Rpb24iLCJhZGRQcm9qZWN0RGl2IiwiYWRkUHJvamVjdEJ0biIsInBsdXNJY29uIiwiYWRkUHJvamVjdFRleHQiLCJwcm9qZWN0c0RpdiIsInJlY3JlYXRlUHJvamVjdHMiLCJyZWNyZWF0ZUxpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=