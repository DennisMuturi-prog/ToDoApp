(()=>{"use strict";var e={79:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),r=n.n(o),d=n(645),i=n.n(d)()(r());i.push([e.id,'.main{\n    display: grid;\n    grid-template-columns: 200px 1fr;\n\n}\n.sidebar{\n    background-color:lightgray;\n    height: 100vh;\n}\n.sidebar div{\n    padding: 10px;\n}\ni{\n    margin-right: 5px;\n}\n.sidebar div:hover{\n    background-color: gray;\n    cursor: pointer;\n    color: white;\n}\n.content{\n    height: 100vh;\n}\n.folder-icon {\n    color: red;\n}\n.add-button {\n    background-color: #4CAF50; /* Green background */\n    border: none; /* Remove border */\n    color: white; /* White text */\n    padding: 15px 32px; /* Some padding */\n    text-align: center; /* Centered text */\n    text-decoration: none; /* Remove underline */\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer; /* Mouse pointer on hover */\n    border-radius: 12px; /* Rounded corners */\n    transition-duration: 0.4s; /* Transition effect */\n}\n\n.add-button:hover {\n    background-color: #45a049; /* Green background on hover */\n}\n\n\n.today-icon {\n    color: blue;\n}\n\n.upcoming-icon {\n    color: green;\n}\n\n.anytime-icon {\n    color: yellow;\n}\n\n.someday-icon {\n    color: purple;\n}\n\n.logbook-icon {\n    color: orange;\n}\n\n.trash-icon {\n    color: black;\n}\ndialog {\n    border: none; /* Remove default border */\n    border-radius: 10px; /* Rounded corners */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\n    width: 80%; /* Dialog width */\n    max-width: 500px; /* Maximum width */\n    padding: 20px; /* Padding around content */\n    margin: 0 auto; /* Center dialog */\n    position: fixed; /* Fixed position */\n    left: 50%; /* Center horizontally */\n    top: 50%; /* Center vertically */\n    transform: translate(-50%, -50%); /* Correct position */\n    background: #fff; /* White background */\n}\n\ndialog form {\n    display: flex;\n    flex-direction: column; /* Stack form fields vertically */\n}\n\ndialog label {\n    font-weight: bold; /* Bold label text */\n    margin-bottom: 5px; /* Space below label */\n    margin-right: 10px;\n}\n\ndialog input[type="text"] {\n    padding: 10px; /* Padding inside text field */\n    margin-bottom: 20px; /* Space below text field */\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n}\n\ndialog input[type="submit"] {\n    background: #4CAF50; /* Green background */\n    color: #fff; /* White text */\n    border: none; /* Remove border */\n    padding: 10px 20px; /* Padding around text */\n    border-radius: 5px; /* Slightly rounded corners */\n    cursor: pointer; /* Hand cursor on hover */\n}\n\ndialog input[type="submit"]:hover {\n    background: #45a049; /* Darker green on hover */\n}\n#cancel{\n        background: #f44336; /* Red background */\n        color: #fff; /* White text */\n}\n#cancel:hover{\n        background: #d32f2f; /* Darker red on hover */\n}\n.button-container{\n    display: flex;\n    gap: 20px;\n}\n.projects>div>div>ul>li{\n    border: 1px solid black;\n    border-radius: 5px;\n}\n.projects>div>div>ul>li {\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n    padding: 10px; /* Padding inside list item */\n    margin-bottom: 10px; /* Space below list item */\n    position: relative; /* Allow absolute positioning of child elements */\n    overflow: hidden; /* Hide overflow content */\n    max-height: 50px; /* Initial max-height for collapsed state */\n    transition: max-height 0.2s ease-out; /* Transition effect for expanding and collapsing */\n}\n\n.projects>div>div>ul>li.expanded {\n    max-height: 500px; /* Max-height for expanded state */\n}\n\n.projects>div>div>ul>li::before {\n    content: \'▶\'; /* Arrow icon for collapsed state */\n    position: absolute; /* Absolute positioning */\n    left:-1px; /* Position to the left of the list item */\n    \n}\n.projects>div>div>ul>li:hover::before {\n    color: #4CAF50; /* Green arrow on hover */\n}\n\n.projects>div>div>ul>li.expanded::before {\n    content: \'▼\'; /* Arrow icon for expanded state */\n}\n.projects>div>div{\n    border: 1px solid lightgray;\n    background-color: whitesmoke;\n    border-radius: 5px;\n    padding: 10px;\n    margin-bottom: 5px;\n}\n#todo-dialog {\n    border: none; /* Remove default border */\n    border-radius: 10px; /* Rounded corners */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\n    width: 80%; /* Dialog width */\n    max-width: 500px; /* Maximum width */\n    padding: 20px; /* Padding around content */\n    margin: 0 auto; /* Center dialog */\n    position: fixed; /* Fixed position */\n    left: 50%; /* Center horizontally */\n    top: 50%; /* Center vertically */\n    transform: translate(-50%, -50%); /* Correct position */\n    background: #fff; /* White background */\n}\n\n#todo-dialog div {\n    margin-bottom: 20px; /* Space below each div */\n}\n\n#todo-dialog label {\n    display: block; /* Display label on its own line */\n    font-weight: bold; /* Bold label text */\n    margin-bottom: 5px; /* Space below label */\n}\n\n#todo-dialog input[type="text"],\n#todo-dialog input[type="date"],\n#todo-dialog textarea,\n#todo-dialog select {\n    width: 100%; /* Full width */\n    padding: 10px; /* Padding inside field */\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n}\n.todo-details button{\n    margin-right: 5px;\n}\n#edit-todo-dialog {\n    border: none; /* Remove default border */\n    border-radius: 10px; /* Rounded corners */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\n    width: 80%; /* Dialog width */\n    max-width: 500px; /* Maximum width */\n    padding: 20px; /* Padding around content */\n    margin: 0 auto; /* Center dialog */\n    position: fixed; /* Fixed position */\n    left: 50%; /* Center horizontally */\n    top: 50%; /* Center vertically */\n    transform: translate(-50%, -50%); /* Correct position */\n    background: #fff; /* White background */\n}\n\n#edit-todo-dialog h1 {\n    text-align: center; /* Center title */\n    margin-bottom: 20px; /* Space below title */\n}\n\n#edit-todo-dialog div {\n    margin-bottom: 20px; /* Space below each div */\n}\n\n#edit-todo-dialog label {\n    display: block; /* Display label on its own line */\n    font-weight: bold; /* Bold label text */\n    margin-bottom: 5px; /* Space below label */\n}\n\n#edit-todo-dialog input[type="text"],\n#edit-todo-dialog input[type="date"],\n#edit-todo-dialog textarea {\n    width: 100%; /* Full width */\n    padding: 10px; /* Padding inside field */\n    border: 1px solid #ddd; /* Light border */\n    border-radius: 5px; /* Slightly rounded corners */\n}\n.active{\n    background-color: gray;\n    color: white;\n}\n.projectpanelselected>ul>li{\n    padding: 5px;\n    border: 1px solid lightgray;\n    border-radius: 5px;\n    margin-bottom: 5px;\n    list-style: none;\n    padding-left: 20px;\n    cursor: pointer;\n}\n.projectpanelselected>ul>li::before{\n    content: \'▶\'; /* Arrow icon for collapsed state */\n    position: relative; /* Absolute positioning */\n    left:0px;\n}\n.projectpanelselected>ul>li.expanded::before {\n    content: \'▼\';\n}\n.projectpanelselected>ul>li:hover::before {\n    color: #4CAF50; /* Green arrow on hover */\n}\n\n',"",{version:3,sources:["webpack://./src/todo.css"],names:[],mappings:"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",sourcesContent:['.main{\r\n    display: grid;\r\n    grid-template-columns: 200px 1fr;\r\n\r\n}\r\n.sidebar{\r\n    background-color:lightgray;\r\n    height: 100vh;\r\n}\r\n.sidebar div{\r\n    padding: 10px;\r\n}\r\ni{\r\n    margin-right: 5px;\r\n}\r\n.sidebar div:hover{\r\n    background-color: gray;\r\n    cursor: pointer;\r\n    color: white;\r\n}\r\n.content{\r\n    height: 100vh;\r\n}\r\n.folder-icon {\r\n    color: red;\r\n}\r\n.add-button {\r\n    background-color: #4CAF50; /* Green background */\r\n    border: none; /* Remove border */\r\n    color: white; /* White text */\r\n    padding: 15px 32px; /* Some padding */\r\n    text-align: center; /* Centered text */\r\n    text-decoration: none; /* Remove underline */\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer; /* Mouse pointer on hover */\r\n    border-radius: 12px; /* Rounded corners */\r\n    transition-duration: 0.4s; /* Transition effect */\r\n}\r\n\r\n.add-button:hover {\r\n    background-color: #45a049; /* Green background on hover */\r\n}\r\n\r\n\r\n.today-icon {\r\n    color: blue;\r\n}\r\n\r\n.upcoming-icon {\r\n    color: green;\r\n}\r\n\r\n.anytime-icon {\r\n    color: yellow;\r\n}\r\n\r\n.someday-icon {\r\n    color: purple;\r\n}\r\n\r\n.logbook-icon {\r\n    color: orange;\r\n}\r\n\r\n.trash-icon {\r\n    color: black;\r\n}\r\ndialog {\r\n    border: none; /* Remove default border */\r\n    border-radius: 10px; /* Rounded corners */\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\r\n    width: 80%; /* Dialog width */\r\n    max-width: 500px; /* Maximum width */\r\n    padding: 20px; /* Padding around content */\r\n    margin: 0 auto; /* Center dialog */\r\n    position: fixed; /* Fixed position */\r\n    left: 50%; /* Center horizontally */\r\n    top: 50%; /* Center vertically */\r\n    transform: translate(-50%, -50%); /* Correct position */\r\n    background: #fff; /* White background */\r\n}\r\n\r\ndialog form {\r\n    display: flex;\r\n    flex-direction: column; /* Stack form fields vertically */\r\n}\r\n\r\ndialog label {\r\n    font-weight: bold; /* Bold label text */\r\n    margin-bottom: 5px; /* Space below label */\r\n    margin-right: 10px;\r\n}\r\n\r\ndialog input[type="text"] {\r\n    padding: 10px; /* Padding inside text field */\r\n    margin-bottom: 20px; /* Space below text field */\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n}\r\n\r\ndialog input[type="submit"] {\r\n    background: #4CAF50; /* Green background */\r\n    color: #fff; /* White text */\r\n    border: none; /* Remove border */\r\n    padding: 10px 20px; /* Padding around text */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n    cursor: pointer; /* Hand cursor on hover */\r\n}\r\n\r\ndialog input[type="submit"]:hover {\r\n    background: #45a049; /* Darker green on hover */\r\n}\r\n#cancel{\r\n        background: #f44336; /* Red background */\r\n        color: #fff; /* White text */\r\n}\r\n#cancel:hover{\r\n        background: #d32f2f; /* Darker red on hover */\r\n}\r\n.button-container{\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n.projects>div>div>ul>li{\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n}\r\n.projects>div>div>ul>li {\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n    padding: 10px; /* Padding inside list item */\r\n    margin-bottom: 10px; /* Space below list item */\r\n    position: relative; /* Allow absolute positioning of child elements */\r\n    overflow: hidden; /* Hide overflow content */\r\n    max-height: 50px; /* Initial max-height for collapsed state */\r\n    transition: max-height 0.2s ease-out; /* Transition effect for expanding and collapsing */\r\n}\r\n\r\n.projects>div>div>ul>li.expanded {\r\n    max-height: 500px; /* Max-height for expanded state */\r\n}\r\n\r\n.projects>div>div>ul>li::before {\r\n    content: \'▶\'; /* Arrow icon for collapsed state */\r\n    position: absolute; /* Absolute positioning */\r\n    left:-1px; /* Position to the left of the list item */\r\n    \r\n}\r\n.projects>div>div>ul>li:hover::before {\r\n    color: #4CAF50; /* Green arrow on hover */\r\n}\r\n\r\n.projects>div>div>ul>li.expanded::before {\r\n    content: \'▼\'; /* Arrow icon for expanded state */\r\n}\r\n.projects>div>div{\r\n    border: 1px solid lightgray;\r\n    background-color: whitesmoke;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin-bottom: 5px;\r\n}\r\n#todo-dialog {\r\n    border: none; /* Remove default border */\r\n    border-radius: 10px; /* Rounded corners */\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\r\n    width: 80%; /* Dialog width */\r\n    max-width: 500px; /* Maximum width */\r\n    padding: 20px; /* Padding around content */\r\n    margin: 0 auto; /* Center dialog */\r\n    position: fixed; /* Fixed position */\r\n    left: 50%; /* Center horizontally */\r\n    top: 50%; /* Center vertically */\r\n    transform: translate(-50%, -50%); /* Correct position */\r\n    background: #fff; /* White background */\r\n}\r\n\r\n#todo-dialog div {\r\n    margin-bottom: 20px; /* Space below each div */\r\n}\r\n\r\n#todo-dialog label {\r\n    display: block; /* Display label on its own line */\r\n    font-weight: bold; /* Bold label text */\r\n    margin-bottom: 5px; /* Space below label */\r\n}\r\n\r\n#todo-dialog input[type="text"],\r\n#todo-dialog input[type="date"],\r\n#todo-dialog textarea,\r\n#todo-dialog select {\r\n    width: 100%; /* Full width */\r\n    padding: 10px; /* Padding inside field */\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n}\r\n.todo-details button{\r\n    margin-right: 5px;\r\n}\r\n#edit-todo-dialog {\r\n    border: none; /* Remove default border */\r\n    border-radius: 10px; /* Rounded corners */\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Shadow effect */\r\n    width: 80%; /* Dialog width */\r\n    max-width: 500px; /* Maximum width */\r\n    padding: 20px; /* Padding around content */\r\n    margin: 0 auto; /* Center dialog */\r\n    position: fixed; /* Fixed position */\r\n    left: 50%; /* Center horizontally */\r\n    top: 50%; /* Center vertically */\r\n    transform: translate(-50%, -50%); /* Correct position */\r\n    background: #fff; /* White background */\r\n}\r\n\r\n#edit-todo-dialog h1 {\r\n    text-align: center; /* Center title */\r\n    margin-bottom: 20px; /* Space below title */\r\n}\r\n\r\n#edit-todo-dialog div {\r\n    margin-bottom: 20px; /* Space below each div */\r\n}\r\n\r\n#edit-todo-dialog label {\r\n    display: block; /* Display label on its own line */\r\n    font-weight: bold; /* Bold label text */\r\n    margin-bottom: 5px; /* Space below label */\r\n}\r\n\r\n#edit-todo-dialog input[type="text"],\r\n#edit-todo-dialog input[type="date"],\r\n#edit-todo-dialog textarea {\r\n    width: 100%; /* Full width */\r\n    padding: 10px; /* Padding inside field */\r\n    border: 1px solid #ddd; /* Light border */\r\n    border-radius: 5px; /* Slightly rounded corners */\r\n}\r\n.active{\r\n    background-color: gray;\r\n    color: white;\r\n}\r\n.projectpanelselected>ul>li{\r\n    padding: 5px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 5px;\r\n    margin-bottom: 5px;\r\n    list-style: none;\r\n    padding-left: 20px;\r\n    cursor: pointer;\r\n}\r\n.projectpanelselected>ul>li::before{\r\n    content: \'▶\'; /* Arrow icon for collapsed state */\r\n    position: relative; /* Absolute positioning */\r\n    left:0px;\r\n}\r\n.projectpanelselected>ul>li.expanded::before {\r\n    content: \'▼\';\r\n}\r\n.projectpanelselected>ul>li:hover::before {\r\n    color: #4CAF50; /* Green arrow on hover */\r\n}\r\n\r\n'],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,d){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(i[A]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&i[c[0]]||(void 0!==d&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=d),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */");return[t].concat([d]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var d={},i=[],a=0;a<e.length;a++){var A=e[a],l=o.base?A[0]+o.base:A[0],c=d[l]||0,s="".concat(l," ").concat(c);d[l]=c+1;var p=n(s),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=a,t.splice(a,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var d=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<d.length;i++){var a=n(d[i]);t[a].references--}for(var A=o(e,r),l=0;l<d.length;l++){var c=n(d[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}d=A}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var d=n.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var d=t[o]={id:o,exports:{}};return e[o](d,d.exports,n),d.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{function e(e,t,n,o,r,d){return{title:e,description:t,dueDate:n,priority:o,notes:r,checklist:d,complete:!1,addItemToChecklist:function(e){this.checklist.push(e)},removeItemFromChecklist:function(e){const t=this.checklist.indexOf(e);-1!==t&&this.checklist.splice(t,1)}}}n.d(o,{kh:()=>W,WJ:()=>J,bb:()=>ee,_$:()=>Z,te:()=>_,Ir:()=>z,q:()=>F,FK:()=>$,Br:()=>V,Wg:()=>X});const t=e("Code repo in GitHub","Complete the final tasks for the project","2022-12-31","low","Remember to test the code thoroughly",["Task 1","Task 2","Task 3"]),r=e("Science fair","Complete the hydrogen project","2023-12-31","high","Remember to test the fusion reaction thoroughly",["hydrogen collection","burning","fusion"]);function d(e,t){return{name:e,todoItems:t,addTodo:function(e){this.todoItems.push(e)},removeTodo:function(e){const t=this.todoItems.indexOf(e);-1!==t&&this.todoItems.splice(t,1)}}}const i=d("Project Summer",[]),a=i;i.addTodo(t),i.addTodo(r),t.addItemToChecklist("Task 4"),t.removeItemFromChecklist("Task 2");var A=n(379),l=n.n(A),c=n(795),s=n.n(c),p=n(569),u=n.n(p),m=n(565),C=n.n(m),g=n(216),h=n.n(g),B=n(589),f=n.n(B),b=n(79),E={};function x(t,n,o,r,d,i){return e(t,n,o,r,d,i)}E.styleTagTransform=f(),E.setAttributes=C(),E.insert=u().bind(null,"head"),E.domAPI=s(),E.insertStyleElement=h(),l()(b.Z,E),b.Z&&b.Z.locals&&b.Z.locals;const y=function(e,t){return d(e,t)},I=document.querySelector(".add-button"),v=document.querySelector(".Project-dialog");I.addEventListener("click",(()=>{v.showModal()}));const k=document.querySelector("#projectname"),S=document.querySelector("#confirm"),w=document.querySelector("#todo-dialog #confirm");S.addEventListener("click",(()=>{const e=y(k.value,[]);F.push(e),W.innerHTML="",localStorage.setItem("projects",JSON.stringify(F)),W.appendChild($(_()))})),w.addEventListener("click",(()=>{const e=document.querySelector("#todo-title"),t=document.querySelector("#todo-description"),n=document.querySelector("#todo-due-date"),o=document.querySelector("#todo-priority"),r=document.querySelector("#todo-notes"),d=document.querySelector("#todo-tasks"),i=z,a=x(e.value,t.value,n.value,o.value,r.value,[d.value]);F[i].todoItems.push(a),localStorage.setItem("projects",JSON.stringify(F)),W.innerHTML="",W.appendChild($(_()))}));const j=document.querySelector(".content");function D(){const e=JSON.parse(localStorage.getItem("projects")),t=(new Date).toISOString().slice(0,10),n=[];e.forEach(((e,o)=>{e.todoItems.forEach(((e,r)=>{e.dueDate===t&&(e.projectIndex=o,e.todoIndex=r,n.push(e))}))})),0===n.length?j.textContent="No tasks for today":j.appendChild(q(n))}function q(e){const t=document.createElement("div"),n=document.createElement("div");n.classList.add("projectpanelselected");const o=document.createElement("ul");return e.forEach(((e,t)=>{const n=document.createElement("li"),r=document.createElement("span"),d=document.createElement("span"),i=document.createElement("div");r.textContent=e.title,d.textContent=` - Due Date: ${e.dueDate}`,i.style.backgroundColor=Z(e.priority),i.style.width="10px",i.style.height="10px",i.style.borderRadius="50%",i.style.display="inline-block",n.setAttribute("data-project-todo",`${e.projectIndex}-${e.todoIndex}`),n.addEventListener("click",(()=>{if(n.classList.toggle("expanded"),n.classList.contains("expanded")){const t=function(e){const t=document.createElement("div");t.classList.add("todo-details");const n=document.createElement("h2");n.textContent=e.title;const o=document.createElement("p");o.textContent=e.description;const r=document.createElement("p");r.textContent=`Due Date: ${e.dueDate}`;const d=document.createElement("p");d.textContent=`Priority: ${e.priority}`;const i=document.createElement("h3");i.textContent="Tasks";const a=document.createElement("ul");e.checklist.forEach((e=>{const t=document.createElement("li");t.textContent=e,a.appendChild(t)}));const A=document.createElement("h3");A.textContent="Notes";const l=document.createElement("p");l.textContent=e.notes;const c=document.createElement("button");c.textContent="Edit",c.addEventListener("click",(t=>{J.showModal();const n=t.target.closest("li").getAttribute("data-project-todo").split("-").map(Number);V(n[0]),X(n[1]);const o=e.title,r=e.description,d=e.dueDate,i=e.priority,a=e.checklist,A=e.notes,l=a.join(",\n");document.querySelector("#edit-todo-title").value=o,document.querySelector("#edit-todo-description").value=r,document.querySelector("#edit-todo-due-date").value=d,document.querySelector("#edit-todo-priority").value=i,document.querySelector("#edit-todo-tasks").value=l,document.querySelector("#edit-todo-notes").value=A}));const s=document.createElement("button");return s.textContent="Delete",s.addEventListener("click",(()=>{const e=event.target.closest("li").getAttribute("data-project-todo").split("-").map(Number),t=e[0],n=e[1],o=JSON.parse(localStorage.getItem("projects"));o[t].todoItems.splice(n,1),j.innerHTML="",localStorage.setItem("projects",JSON.stringify(o)),D()})),t.appendChild(n),t.appendChild(o),t.appendChild(r),t.appendChild(d),t.appendChild(i),t.appendChild(a),t.appendChild(A),t.appendChild(l),t.appendChild(c),t.appendChild(s),t}(e);n.appendChild(t)}else{const e=n.querySelector(".todo-details");e&&e.remove()}})),n.appendChild(i),n.appendChild(r),n.appendChild(d),o.appendChild(n)})),n.appendChild(o),t.appendChild(n),t}function L(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function M(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function N(e){M(1,arguments);var t=function(e){M(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===T(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(e);return t.setHours(0,0,0,0),t}var Y=864e5;function R(){const e=JSON.parse(localStorage.getItem("projects")),t=new Date,n=(t.toISOString().slice(0,10),[]);e.forEach(((e,o)=>{e.todoItems.forEach(((e,r)=>{const d=function(e,t){M(2,arguments);var n=N(e),o=N(t),r=n.getTime()-L(n),d=o.getTime()-L(o);return Math.round((r-d)/Y)}(new Date(e.dueDate),t);d<=7&&d>=0&&(e.projectIndex=o,e.todoIndex=r,n.push(e))}))})),console.log(n),0===n.length?j.textContent="No tasks for today":j.appendChild(q(n))}const P=document.querySelector(".content");let F=[];F.push(a),F.push(y("My Project",[x("Military gadget upgrade","Modify the military gadget to be more powerful","2022-12-30","medium","The gadget is used to detect the enemy's position and attack them",["test ballistics","missile precision upgrade","Test the gadget in the field"])]));let O=JSON.stringify(F);localStorage.getItem("projects")?F=_():localStorage.setItem("projects",O);const W=document.querySelector(".projects"),H=document.querySelector("#todo-dialog"),J=document.querySelector("#edit-todo-dialog");let z,G,U,Q;function $(e){const t=document.createElement("div");return e.forEach(((e,n)=>{const o=document.createElement("div"),r=document.createElement("h1"),d=document.createElement("ul");r.textContent=e.name,e.todoItems.forEach(((e,t)=>{const o=document.createElement("li"),r=document.createElement("span"),i=document.createElement("span"),a=document.createElement("div");r.textContent=e.title,i.textContent=` - Due Date: ${e.dueDate}`,a.style.backgroundColor=Z(e.priority),a.style.width="10px",a.style.height="10px",a.style.borderRadius="50%",a.style.display="inline-block",o.setAttribute("data-project-todo",`${n}-${t}`),o.addEventListener("click",(()=>{if(o.classList.toggle("expanded"),o.classList.contains("expanded")){const e=o.getAttribute("data-project-todo").split("-").map(Number),t=K(_()[e[0]].todoItems[e[1]]);o.appendChild(t)}else{const e=o.querySelector(".todo-details");e&&e.remove()}})),o.appendChild(a),o.appendChild(r),o.appendChild(i),d.appendChild(o)})),o.appendChild(r),o.appendChild(d);const i=document.createElement("button");i.textContent="Add To-Do",i.setAttribute("data-project-index",n),i.addEventListener("click",(()=>{H.showModal(),z=i.getAttribute("data-project-index")})),o.appendChild(i),t.appendChild(o)})),t}function Z(e){switch(e){case"high":return"red";case"medium":return"yellow";case"low":return"green";default:return"gray"}}function _(){return JSON.parse(localStorage.getItem("projects"))}function K(e){const t=document.createElement("div");t.classList.add("todo-details");const n=document.createElement("h2");n.textContent=e.title;const o=document.createElement("p");o.textContent=e.description;const r=document.createElement("p");r.textContent=`Due Date: ${e.dueDate}`;const d=document.createElement("p");d.textContent=`Priority: ${e.priority}`;const i=document.createElement("h3");i.textContent="Tasks";const a=document.createElement("ul");e.checklist.forEach((e=>{const t=document.createElement("li");t.textContent=e,a.appendChild(t)}));const A=document.createElement("h3");A.textContent="Notes";const l=document.createElement("p");l.textContent=e.notes;const c=document.createElement("button");c.textContent="Edit",c.addEventListener("click",(t=>{J.showModal();const n=t.target.closest("li").getAttribute("data-project-todo").split("-").map(Number);G=n[0],U=n[1];const o=e.title,r=e.description,d=e.dueDate,i=e.priority,a=e.checklist,A=e.notes,l=a.join(",\n");document.querySelector("#edit-todo-title").value=o,document.querySelector("#edit-todo-description").value=r,document.querySelector("#edit-todo-due-date").value=d,document.querySelector("#edit-todo-priority").value=i,document.querySelector("#edit-todo-tasks").value=l,document.querySelector("#edit-todo-notes").value=A}));const s=document.createElement("button");return s.textContent="Delete",s.addEventListener("click",(()=>{const e=event.target.closest("li").getAttribute("data-project-todo").split("-").map(Number),t=e[0],n=e[1];let o=[];if(o.push(F[t].todoItems[n]),localStorage.getItem("deletedItems")){let e=ee();e.push(F[t].todoItems[n]),localStorage.setItem("deletedItems",JSON.stringify(e))}else localStorage.setItem("deletedItems",JSON.stringify(o));const r=document.querySelector(".projects");F[t].todoItems.splice(n,1),r.innerHTML="",localStorage.setItem("projects",JSON.stringify(F)),r.appendChild($(_()))})),t.appendChild(n),t.appendChild(o),t.appendChild(r),t.appendChild(d),t.appendChild(i),t.appendChild(a),t.appendChild(A),t.appendChild(l),t.appendChild(c),t.appendChild(s),t}function V(e){G=e}function X(e){U=e}function ee(){return JSON.parse(localStorage.getItem("deletedItems"))}W.appendChild($(_())),console.log(a.todoItems[0].priority),document.querySelector("#edit-todo-dialog #confirm").addEventListener("click",(()=>{const e=F[G].todoItems[U],t=document.querySelector("#edit-todo-dialog #edit-todo-title"),n=document.querySelector("#edit-todo-dialog #edit-todo-description"),o=document.querySelector("#edit-todo-dialog #edit-todo-due-date"),r=document.querySelector("#edit-todo-dialog #edit-todo-priority"),d=document.querySelector("#edit-todo-dialog #edit-todo-notes"),i=document.querySelector("#edit-todo-dialog #edit-todo-tasks");e.title=t.value,e.description=n.value,e.dueDate=o.value,e.priority=r.value,e.notes=d.value,e.checklist=i.value.split(","),W.innerHTML="",localStorage.setItem("projects",JSON.stringify(F)),W.appendChild($(_())),"Today"==Q?(te.innerHTML="",D()):"Next 7 Days"==Q&&(te.innerHTML="",R())}));const te=document.querySelector(".content"),ne=document.querySelectorAll(".sidebar>div");ne.forEach((e=>{e.addEventListener("click",(()=>{ne.forEach((e=>{e.classList.remove("active")})),e.classList.add("active"),te.innerHTML="",Q=e.textContent,"Projects"==Q?(function(e){const t=document.createElement("div");t.classList.add("add-project");const n=document.createElement("button");n.classList.add("add-button");const o=document.createElement("i");o.classList.add("fas"),o.classList.add("fa-plus"),n.appendChild(o);const r=document.createElement("span");r.textContent="Add Project",r.classList.add("add-project-text"),t.appendChild(n),t.appendChild(r);const d=document.createElement("div");d.classList.add("projects"),e.appendChild(t),e.appendChild(d)}(te),document.querySelector(".projects").appendChild($(_())),function(){document.querySelector("#edit-todo-dialog #confirm").addEventListener("click",(()=>{const e=F[G].todoItems[U],t=document.querySelector("#edit-todo-dialog #edit-todo-title"),n=document.querySelector("#edit-todo-dialog #edit-todo-description"),o=document.querySelector("#edit-todo-dialog #edit-todo-due-date"),r=document.querySelector("#edit-todo-dialog #edit-todo-priority"),d=document.querySelector("#edit-todo-dialog #edit-todo-notes"),i=document.querySelector("#edit-todo-dialog #edit-todo-tasks");e.title=t.value,e.description=n.value,e.dueDate=o.value,e.priority=r.value,e.notes=d.value,e.checklist=i.value.split(",");const a=document.querySelector(".content");a.innerHTML="",localStorage.setItem("projects",JSON.stringify(F)),a.appendChild($(_())),"Today"==Q?(te.innerHTML="",D()):"Next 7 Days"==Q&&(te.innerHTML="",R())}));const e=document.querySelector("#confirm"),t=document.querySelector("#todo-dialog #confirm");e.addEventListener("click",(()=>{const e=y(projectname.value,[]);F.push(e),W.innerHTML="",localStorage.setItem("projects",JSON.stringify(F)),W.appendChild($(_()))})),t.addEventListener("click",(()=>{const e=document.querySelector("#todo-title"),t=document.querySelector("#todo-description"),n=document.querySelector("#todo-due-date"),o=document.querySelector("#todo-priority"),r=document.querySelector("#todo-notes"),d=document.querySelector("#todo-tasks"),i=z,a=x(e.value,t.value,n.value,o.value,r.value,[d.value]);F[i].todoItems.push(a),localStorage.setItem("projects",JSON.stringify(F)),W.innerHTML="",W.appendChild($(_()))}))}()):"Today"==Q?D():"Next 7 Days"==Q?R():"Trash"==Q&&P.appendChild(q(ee()))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,